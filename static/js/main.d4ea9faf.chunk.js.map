{"version":3,"sources":["configs/blockchainParameters.ts","configs/SigmaStampConfig.ts","scripts/transactionBuilder.ts","scripts/getCurrentBlockchainInfo.ts","utils/readFileAsDataUri.tsx","filePreview/mimeTypes/image/ImageFilePreview.tsx","filePreview/mimeTypes/audio/AudioFilePreview.tsx","utils/readFileAsText.tsx","filePreview/mimeTypes/misc/CodeFilePreview.tsx","filePreview/mimeTypes/misc/UnknownFilePreview.tsx","utils/fetchWithCache.ts","utils/shortenHexValue.ts","oracles/_AbstractBlockcyptherOracle.ts","oracles/BitcoinOracle.ts","scripts/timeUtils.ts","oracles/DateOracle.ts","oracles/EthereumOracle.ts","oracles/LitecoinOracle.ts","oracles/RssFeedOracle.ts","config.ts","globalStyle.ts","articles/how-it-works.md","articles/mobile-device.md","articles/FAQ.md","articles/wiki.md","utils/addTooltipToLinks.ts","components/Article.tsx","utils/useHash.ts","utils/useAsyncMemo.ts","components/Center.tsx","components/LogoComponent.tsx","routes.mjs","components/Notifications.tsx","utils/usePersistentState.ts","utils/isRunningOnMobileDevice.ts","pages/00-NotFound/NotFound.tsx","pages/15-Home/HomePage.tsx","utils/findDeepestChild.ts","pdf/createPdf.ts","components/PdfPage.tsx","components/UploadZone.tsx","components/UploadZoneSigmastampContent.tsx","utils/readFileAsArrayBuffer.tsx","utils/readFileAsByteArray.tsx","utils/uint8ArrayToHex.tsx","hash/blake2b256.ts","scripts/validateFirstCertificate.ts","components/Loader.tsx","components/QRCode.tsx","components/QRCodeLink.tsx","components/PaymentGate.tsx","components/Button.tsx","components/ErrorComponent.tsx","components/Float.tsx","components/Nl2br.tsx","components/AsyncContentComponent.tsx","filePreview/SingleFilePreview.tsx","filePreview/MultipleFilesPreview.tsx","oracles/FakeFileOracle.ts","scripts/createSigmaStampNFT.ts","utils/promptAsync.ts","pages/10-FirstCertificate/FirstCertificatePdfPage.tsx","utils/hexToBase64.ts","pages/10-FirstCertificate/FirstCertificatePage.tsx","components/MessageSigner.tsx","components/FalseProofsHardnessEstiminator.tsx","pages/20-VerificationPage/VerificationPage.tsx","pages/50-Blockchains/BlockchainsPage.tsx","pages/53-Oracles/OraclesPage.tsx","utils/fetchAsFile.tsx","pages/55-SampleCertificates/SampleCertificatesPage.tsx","pages/80-TechnicalStatus/TechnicalStatusPageBadges.tsx","pages/80-TechnicalStatus/TechnicalStatusPage.tsx","components/ErgoConnectorButton.tsx","pages/85-Playground/Playground.tsx","pages/90-About/AboutPage.tsx","pages/00-App/MenuItemsComponent.tsx","pages/00-App/MenuComponent.tsx","pages/00-App/App.tsx","index.tsx"],"names":["USE_MAINNET","NANO_ERGS_IN_ONE_ERG","MIN_NANO_ERGS_IN_BOX","NFT_CREATION_TRANSACTION_MINER_FEE","EXPLORER_URL","EXPLORER_TOKEN_SEARCH_PREFIX","EXPLORER_BLOKCHAIN_HEIGHT_PREFIX","EXPLORER_BOX_INFO_PREFIX","EXPLORER_UNSPENT_BOXES_BY_TOKEN_ID_PREFIX","EXPLORER_TRANSACTION_INFO_PREFIX","SIGMASTAMP_SERVICE_FEE_AMOUNT","SIGMASTAMP_SERVICE_FEE_ADDRESS","SIGMASTAMP_NFT_NAME","SIGMASTAMP_ASSET_TYPE","SIGMASTAMP_NFT_DESCRIPTION","ergolib","get_minimum_required_balance","get_minimum_required_balance_ergs","convert_tx_values_number_to_string","tx","outputs","map","output","json","assets","value","toString","asset","tokenId","amount","convert_utxo_values_number_to_string","get_box_selection","utxos","wasm","selector","SimpleBoxSelector","select","ErgoBoxes","from_boxes_json","BoxValue","from_i64","I64","from_str","Tokens","get_output_box_candidates","user","height","nftId","hash","user_box_value","service_fee_value","output_box_candidates","ErgoBoxCandidates","empty","first_output_builder","ErgoBoxCandidateBuilder","Contract","pay_to_address","Address","from_base58","second_output_builder","mint_token","Token","TokenId","TokenAmount","assetType","Constant","from_byte_array","Uint8Array","from","Buffer","fileHashValue","set_register_value","add","build","create_transaction","getBlockHeight","ergoConnector","nautilus","Error","getContext","ctx","get_utxos","input_box_selection","first_input_box_id","boxes","get","box_id","to_str","miner_fee_value","min_change_value","tx_builder","TxBuilder","new","data_inputs","DataInputs","set_data_inputs","to_json","converted","JSON","parse","inputs","box","full_box","find","utxo","boxId","extension","sign_tx","unsigned_tx","submit_tx","signed_tx","a","fetch","response","body","items","CURRENT_DIFFICULTY","getTotalDifficultyForBlock","block","getAggregatedDifficultyBetween","stampingBlock","currentBlock","stampingBlockTotalDiff","currentBlockTotalDiff","getAggregatedDifficultySinceBlock","readFileAsDataUrl","file","Promise","resolve","reject","reader","FileReader","addEventListener","event","target","result","readAsDataURL","ImageFilePreview","test","type","fileData","ImageFilePreviewDiv","styled","div","AudioFilePreview","readFileAsText","readAsText","CodeFilePreview","CodeFilePreviewDiv","language","style","dark","showLineNumbers","UnknownFilePreview","cache","ObjectStorage","PrefixStorage","localStorage","fetchWithCache","url","ttl","getItem","href","cacheItem","validTo","Date","data","error","setItem","now","toISOString","shortenHexValue","length","exec","groups","zeros","rest","substr","AbstractBlockcyptherOracle","name","titleOfCoin","apiUrl","URL","this","toLowerCase","title","format","source","getShortenValue","message","BitcoinOracle","get_time_with_timezone","date_arg","userTime","toLocaleTimeString","timeZoneName","hour12","Intl","DateTimeFormat","resolvedOptions","timeZone","timeZoneOffset","getTimezoneOffset","timeZoneFormattedOffset","Math","abs","floor","padStart","get_time_with_timezone_from_timestamp","unixtimestamp","get_local_date","getFullYear","getMonth","slice","getDate","DateOracle","date","getTime","EthereumOracle","LitecoinOracle","RssFeedOracle","rssParser","RssParser","text","feedText","parseString","feed","firstItem","link","VERSION","version","ORACLES","FILE_PREVIEWERS","PAGE_SIZE","Vector","config","ConfigChecker","process","BUILD_DETAILS_URL","BUILD_DATE","GlobalStyle","createGlobalStyle","addTooltipToLinks","element","seltUrl","window","location","links","querySelectorAll","origin","tooltip","document","createElement","classList","position","visibility","width","border","zIndex","appendChild","iframe","src","overflow","boxShadow","borderRadius","top","clientY","left","clientX","innerHTML","Article","useState","setHash","useEffect","handleHashChange","removeEventListener","useHash","factory","deps","React","setValue","cancel","promise","undefined","then","val2","useAsyncMemo","mimeType","headers","content","spaceTrim","console","markdown","converter","setFlavor","html","makeHtml","currentSubsection","substring","ArticleDiv","dangerouslySetInnerHTML","__html","ref","section","querySelector","scrollIntoView","Converter","extensions","showdownHighlight","pre","auto_detection","Center","children","isFlexed","className","CenterDiv","LogoComponent","isWatermark","LogoElement","alt","ROUTES","Root","VerificationPage","Blockchains","Oracles","SampleCertificates","Faq","Playground","TechnicalStatus","About","Routes","HowItWorks","Mobile","Wiki","FirstCertificate","Notifications","key","initialValue","valueInLocalStorage","state","setState","stringify","usePersistentState","navigator","userAgent","isMobileDeviceWarning","setMobileDeviceWarning","NotificationsDiv","NotificationDiv","to","onClick","NotFoundPage","NotFoundPageDiv","HomePage","HomePageDiv","rel","findDeepestChild","createPdf","containerElement","pdfDocument","jsPDF","toArray2D","forAllImagesInElement","html2canvas","scale","backgroundColor","allowTaint","ignoreElements","contains","canvas","image","toDataURL","addImage","containerBoundingBox","getBoundingClientRect","originPosition","fromObject","containerSize","addFont","Array","textElement","positionInPdf","subtract","divide","multiply","textElementDeepestChild","fontSize","parseFloat","getComputedStyle","getPropertyValue","fontWeight","fontStyle","fontSizeInPdf","y","setFontSize","setFont","innerText","baseline","PdfPage","props","pageRef","useRef","PdfPageDiv","renderUi","current","pdfBlob","x","UploadZone","uploadClick","isClickable","onFilesOver","onFiles","isFilesOver","setFilesOver","onFileOverWrapper","isFileOver","UploadZoneDiv","onMouseEnter","onMouseLeave","onDragEnter","stopPropagation","preventDefault","onDragOver","onDragExit","onDragEnd","onDragEndCapture","onDrop","files","dataTransfer","multiple","click","onChange","UploadZoneSigmastampContent","UploadZoneContentDiv","readFileAsArrayBuffer","readAsArrayBuffer","readFileAsByteArray","uint8ArrayToHex","uint8Array","join","blake2b256","input","context","blake2bInit","blake2bUpdate","hashUint8Array","blake2bFinal","validateFirstCertificate","firstCertificate","tokensResponse","tokensBody","item","emissionAmount","boxesResponse","boxesBody","additionalRegisters","R7","renderedValue","R8","getTransactionTime","txId","log","timestamp","getNFTHolderAddress","total","address","Loader","LoaderDiv","QRCode","canvasElement","options","color","QRCodeGenerator","toCanvas","QRCodeLink","Button","button","ErrorComponent","Float","FloatDiv","Nl2br","lines","split","line","i","Fragment","AsyncContentComponent","loading","factorable","SingleFilePreview","SingleFilePreviewDiv","filePreviewer","isSupporting","render","MultipleFilesPreview","MultipleFilesPreviewDiv","filesCount","FakeFileOracle","toUpperCase","createSigmaStampNFT","userAddress","documentHashInBase64","documentHashInHex","forEver","promptAsync","_default","forImmediate","prompt","FirstCertificatePdfPage","setPayment","setData","errors","setErrors","all","oracle","getData","dataAndErrors","filter","e","File","certificateFile","zip","JSZip","generateAsync","zipBlob","zipHash","str","btoa","String","fromCharCode","apply","replace","zipHashBase64","saveAs","PreviewWithLogo","Data","dataGroup","index","margin","light","CARD_SIZE","CARD_PADDING","FirstAndSecondCertificatePageDiv","DEFAULT_ADDRESSES_LOADER_STATE","loaded","addresses","DEFAULT_USER_IS_OWNER_OF_ADDRESS_STATE","ownerOfStamperAddress","ownerOfHolderAddress","availableIntersectingAddresses","MessageSigner","loadedAddresses","setLoadedAddresses","userIsOwner","setUserIsOwner","wallet","connected","get_used_addresses","intersectingAddresses","indexOf","stamperAddress","push","holderAddress","pop","for","id","addr","placeholder","sign_data","res","disabled","DEFAULT_FALSE_PROOF_HARDNESS","aggregatedDifficulty","calculate_kWh_used_to_achieve_target_difficulty","target_diff","calculate_electricity_price_for_kwh","kWh","get_kWh_in_nice_format","toFixed","get_usd_in_nice_format","usd","get_usd_in_approximated_magnitude_format","FalseProofsHardnessEstiminator","hardness","setHardness","setkWh","verification","setVerification","verificationFailed","transactionId","settlementHeight","currentHolder","droppedFiles","droppedFileVerification","alert","BlockchainsPage","OraclesDiv","DEFAULT_ORACLE_RESULT","OraclesPage","constructor","fetchAsFile","blob","lookup","basename","path","reverse","SampleCertificatesPage","SampleCertificatesDiv","TechnicalStatusPageBadges","TechnicalStatusPage","toUTCString","checkIfNautilusAvailable","NAUTILUS_WALLET_INSTALL_URL","ErgoConnectorButton","connect","createErgoObject","get_change_address","Number","get_balance","balance","setWallet","prev","disconnect","PlaygroundPage","setFile","sentTXHash","setSentTXHash","PlaygroundPageDiv","firstFile","stx","AboutPage","AboutPageDiv","MenuItemsComponent","MenuElement","menu","MenuComponent","DEFAULT_WALLET_STATE","App","AppDiv","articleHowItWorks","articleMobileDevice","articleWiki","articleFAQ","Object","entries","info","toLocaleString","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d4ea9faf.chunk.js","sourcesContent":["export const USE_MAINNET = true;\n\nexport const NANO_ERGS_IN_ONE_ERG: number = 1000000000;\n\nexport const MIN_NANO_ERGS_IN_BOX: number = 1000000;\n\n// export const MAINNET_BLOCK_TIME_SECONDS: number = 120;\n// export const TESTNET_BLOCK_TIME_SECONDS: number = 5;\n// export const BLOCK_TIME_SECONDS: number =\n// \tUSE_MAINNET ? MAINNET_BLOCK_TIME_SECONDS : TESTNET_BLOCK_TIME_SECONDS;\n\nexport const NFT_CREATION_TRANSACTION_MINER_FEE: number = 1000000;\n\n// export const ADDRESS_NETWORK_TYPE_MAINNET: number = 0x00;\n// export const ADDRESS_NETWORK_TYPE_TESTNET: number = 0x10;\n// export const ADDRESS_NETWORK_TYPE_CURRENT: number =\n// \tUSE_MAINNET ? ADDRESS_NETWORK_TYPE_MAINNET : ADDRESS_NETWORK_TYPE_TESTNET;\n\nexport const MAINNET_EXPLORER_URL: string = \"https://api.ergoplatform.com\";\nexport const TESTNET_EXPLORER_URL: string = \"https://api-testnet.ergoplatform.com\";\nexport const EXPLORER_URL = USE_MAINNET ? MAINNET_EXPLORER_URL : TESTNET_EXPLORER_URL;\n\nexport const EXPLORER_TOKEN_SEARCH_PREFIX: string = \"/api/v1/tokens/search?query=\";\nexport const EXPLORER_TOKEN_SEARCH_SUFIX: string = \"\";\n\n/*\nexport const MAINNET_NODE_URL: string = \"http://213.239.193.208:9053\";\n//export const MAINNET_NODE_URL: string = \"https://ergonode.blocpow.io\"; <-- not working anymore :-(\nexport const TESTNET_NODE_URL: string = \"http://213.239.193.208:9052\";\n//export const TESTNET_NODE_URL: string = \"https://ergotestnetnode.blocpow.io\";\nexport const NODE_URL = USE_MAINNET ? MAINNET_NODE_URL : TESTNET_NODE_URL;\n*/\n\n/*\nexport const EXPLORER_BALANCE_ENDPOINT_PREFIX: string = \"/api/v1/addresses/\";\nexport const EXPLORER_BALANCE_ENDPOINT_SUFIX: string = \"/balance/total\";\n\nexport const EXPLORER_TOKEN_INFO_PREFIX: string = \"/api/v1/tokens/\";\nexport const EXPLORER_TOKEN_INFO_SUFIX: string = \"\";\n*/\n\nexport const EXPLORER_BLOKCHAIN_HEIGHT_PREFIX: string = \"/api/v1/blocks?limit=1\";\nexport const EXPLORER_BLOKCHAIN_HEIGHT_SUFIX: string = \"\";\n\n/*\nexport const EXPLORER_ASSET_SEARCH_PREFIX: string = \"/api/v1/assets/search/byTokenId?query=\";\nexport const EXPLORER_ASSET_SEARCH_SUFIX: string = \"\";\n*/\n\nexport const EXPLORER_BOX_INFO_PREFIX: string = \"/api/v1/boxes/\";\nexport const EXPLORER_BOX_INFO_SUFIX: string = \"\";\n\n/*\nexport const EXPLORER_BOXES_BY_ADDRESS_PREFIX: string = \"/api/v1/boxes/byAddress/\";\nexport const EXPLORER_BOXES_BY_ADDRESS_SUFIX: string = \"\";\n\nexport const EXPLORER_UNSPENT_BOXES_BY_ADDRESS_PREFIX: string = \"/api/v1/boxes/unspent/byAddress/\";\nexport const EXPLORER_UNSPENT_BOXES_BY_ADDRESS_SUFIX: string = \"\";\n*/\n\nexport const EXPLORER_UNSPENT_BOXES_BY_TOKEN_ID_PREFIX: string = \"/api/v1/boxes/unspent/byTokenId/\";\nexport const EXPLORER_UNSPENT_BOXES_BY_TOKEN_ID_SUFIX: string = \"\";\n\n/*\nexport const EXPLORER_BOX_BY_ID_PREFIX: string = \"/api/v1/boxes/\";\nexport const EXPLORER_BOX_BY_ID_SUFFIX: string = \"\";\n*/\n\nexport const EXPLORER_TRANSACTION_INFO_PREFIX: string = \"/api/v1/transactions/\";\nexport const EXPLORER_TRANSACTION_INFO_SUFIX: string = \"\";\n\n/*\nexport const NODE_ADDRESS_TO_TREE_PREFIX: string = \"/script/addressToTree/\";\nexport const NODE_ADDRESS_TO_TREE_SUFIX: string = \"\";\n*/\n","import { USE_MAINNET } from \"./blockchainParameters\";\n\nexport const SIGMASTAMP_SERVICE_FEE_AMOUNT: number = 100000000;\n\nexport const MAINNET_SERVICE_FEE_ADDRESS: string = \"9i5EyNjeWHaRwCxjdn8PfBcyB3MzrbdBjNCjcxbF3tR19fdo8NP\";\nexport const TESTNET_SERVICE_FEE_ADDRESS: string = \"todo\";\n\nexport const SIGMASTAMP_SERVICE_FEE_ADDRESS: string =\n\t(USE_MAINNET) ? MAINNET_SERVICE_FEE_ADDRESS : TESTNET_SERVICE_FEE_ADDRESS;\n\nexport const SIGMASTAMP_NFT_NAME: string = \"SigmaStampNFT\";\n\n//(0x01 specifies NFT category, 0xde specifies SigmaStampNFT subcategory)\n//see (https://github.com/ergoplatform/eips/blob/master/eip-0004.md) for more info\nexport const SIGMASTAMP_ASSET_TYPE: string = \"01de\";\n\nexport const SIGMASTAMP_NFT_DESCRIPTION: string = \"Proof of existence of document with Blake2b-256 hash specified in R8 register during minting of this NFT token.\";\n","import {\n    MIN_NANO_ERGS_IN_BOX,\n    NANO_ERGS_IN_ONE_ERG,\n    NFT_CREATION_TRANSACTION_MINER_FEE,\n} from '../configs/blockchainParameters';\nimport {\n    SIGMASTAMP_ASSET_TYPE,\n    SIGMASTAMP_NFT_DESCRIPTION,\n    SIGMASTAMP_NFT_NAME,\n    SIGMASTAMP_SERVICE_FEE_ADDRESS,\n    SIGMASTAMP_SERVICE_FEE_AMOUNT,\n} from '../configs/SigmaStampConfig';\n\nimport { getBlockHeight } from './getCurrentBlockchainInfo';\n\nconst ergolib = import('ergo-lib-wasm-browser');\n\nexport function get_minimum_required_balance(): number {\n    return (\n        SIGMASTAMP_SERVICE_FEE_AMOUNT +\n        NFT_CREATION_TRANSACTION_MINER_FEE +\n        MIN_NANO_ERGS_IN_BOX\n    );\n}\n\nexport function get_minimum_required_balance_ergs(): number {\n    return get_minimum_required_balance() / NANO_ERGS_IN_ONE_ERG;\n}\n\ninterface ITxInput {\n    boxId: string;\n    extension: any;\n}\n\ninterface ITxOutputAsset {\n    tokenId: string;\n    amount: number;\n}\n\ninterface ITxOutputAssetConverted {\n    tokenId: string;\n    amount: string;\n}\n\ninterface ITxOutput {\n    value: number;\n    ergoTree: string;\n    assets: ITxOutputAsset[];\n    additionalRegisters: any;\n    creationHeight: number;\n}\n\ninterface ITxOutputConverted {\n    value: string;\n    ergoTree: string;\n    assets: ITxOutputAssetConverted[];\n    additionalRegisters: any;\n    creationHeight: number;\n}\n\ninterface ITx {\n    inputs: ITxInput[];\n    dataInputs: any[];\n    outputs: ITxOutput[];\n}\n\ninterface ITxConverted {\n    inputs: ITxInput[];\n    dataInputs: any[];\n    outputs: ITxOutputConverted[];\n}\n\ninterface ISignedTxInput {\n    boxId: string;\n    spendingProof: {\n        proofBytes: string;\n        extension: any;\n    };\n}\n\ninterface ISignedOutput {\n    boxId: string;\n    value: number;\n    ergoTree: string;\n    assets: ITxOutputAsset[];\n    additionalRegisters: any;\n    creationHeight: number;\n    transactionId: string;\n    index: number;\n}\n\ninterface ISignedTx {\n    id: string;\n    inputs: ISignedTxInput[];\n    dataInputs: any[];\n    outputs: ISignedOutput[];\n}\n\nexport function convert_tx_values_number_to_string(tx: ITx): ITxConverted {\n    return {\n        ...tx,\n        outputs: tx.outputs.map((output: ITxOutput) =>\n            convert_utxo_values_number_to_string(output),\n        ),\n    };\n}\n\nexport function convert_utxo_values_number_to_string(\n    json: ITxOutput,\n): ITxOutputConverted {\n    if (json.assets == null) {\n        json.assets = [];\n    }\n    return {\n        ...json,\n        value: json.value.toString(),\n\n        assets: json.assets.map((asset: ITxOutputAsset) => ({\n            tokenId: asset.tokenId,\n            amount: asset.amount.toString(),\n        })),\n    };\n}\n\nasync function get_box_selection(utxos: any) {\n    const wasm = await ergolib;\n\n    const selector = new wasm.SimpleBoxSelector();\n\n    return selector.select(\n        wasm.ErgoBoxes.from_boxes_json(utxos),\n        wasm.BoxValue.from_i64(\n            wasm.I64.from_str(get_minimum_required_balance().toString()),\n        ),\n        new wasm.Tokens(),\n    );\n}\n\nasync function get_output_box_candidates(\n    user: string,\n    height: number,\n    nftId: string,\n    hash: string, // price: number, nanoErgs: number, tokenID: string, height: number\n) {\n    const wasm = await ergolib;\n\n    const user_box_value = wasm.BoxValue.from_i64(\n        wasm.I64.from_str(MIN_NANO_ERGS_IN_BOX.toString()),\n    );\n    const service_fee_value = wasm.BoxValue.from_i64(\n        wasm.I64.from_str(SIGMASTAMP_SERVICE_FEE_AMOUNT.toString()),\n    );\n\n    const output_box_candidates = wasm.ErgoBoxCandidates.empty();\n\n    const first_output_builder = new wasm.ErgoBoxCandidateBuilder(\n        user_box_value,\n        wasm.Contract.pay_to_address(wasm.Address.from_base58(user)),\n        height,\n    );\n\n    const second_output_builder = new wasm.ErgoBoxCandidateBuilder(\n        service_fee_value,\n        wasm.Contract.pay_to_address(\n            wasm.Address.from_base58(SIGMASTAMP_SERVICE_FEE_ADDRESS),\n        ),\n        height,\n    );\n\n    first_output_builder.mint_token(\n        new wasm.Token(\n            wasm.TokenId.from_str(nftId),\n            wasm.TokenAmount.from_i64(wasm.I64.from_str('1')),\n        ),\n        SIGMASTAMP_NFT_NAME,\n        SIGMASTAMP_NFT_DESCRIPTION,\n        0,\n    );\n\n    const assetType = wasm.Constant.from_byte_array(\n        Uint8Array.from(Buffer.from(SIGMASTAMP_ASSET_TYPE, 'hex')),\n    );\n    const fileHashValue = wasm.Constant.from_byte_array(\n        Uint8Array.from(Buffer.from(hash, 'hex')),\n    );\n\n    first_output_builder.set_register_value(7, assetType);\n    first_output_builder.set_register_value(8, fileHashValue);\n    //todo add remaining register values (R9 - url for verification...)\n\n    output_box_candidates.add(first_output_builder.build());\n    output_box_candidates.add(second_output_builder.build());\n\n    return output_box_candidates;\n}\n\nexport async function create_transaction(\n    user: string,\n    hash: string,\n): Promise<ITxConverted> {\n    let wasm = await ergolib;\n\n    const height = await getBlockHeight();\n\n    if (!ergoConnector || !ergoConnector.nautilus) {\n        throw new Error('Ergo connector is required');\n    }\n\n    const ctx = await ergoConnector.nautilus.getContext();\n\n    const utxos = await ctx.get_utxos();\n\n    const input_box_selection = await get_box_selection(utxos);\n    const first_input_box_id = input_box_selection\n        .boxes()\n        .get(0)\n        .box_id()\n        .to_str();\n\n    const output_box_candidates = await get_output_box_candidates(\n        user,\n        height,\n        first_input_box_id,\n        hash,\n    );\n\n    const miner_fee_value = wasm.BoxValue.from_i64(\n        wasm.I64.from_str(NFT_CREATION_TRANSACTION_MINER_FEE.toString()),\n    );\n    const min_change_value = wasm.BoxValue.from_i64(\n        wasm.I64.from_str(MIN_NANO_ERGS_IN_BOX.toString()),\n    );\n\n    const tx_builder = wasm.TxBuilder.new(\n        input_box_selection,\n        output_box_candidates,\n        height,\n        miner_fee_value,\n        wasm.Address.from_base58(user),\n        min_change_value,\n    );\n\n    const data_inputs = new wasm.DataInputs();\n    tx_builder.set_data_inputs(data_inputs);\n\n    const tx = tx_builder.build().to_json();\n    const converted = convert_tx_values_number_to_string(JSON.parse(tx));\n\n    converted.inputs = converted.inputs.map((box: any) => {\n        const full_box = utxos.find((utxo) => utxo.boxId === box.boxId);\n        if (full_box) return { ...full_box, extension: {} };\n        else return box;\n    });\n\n    return converted;\n}\n\nexport async function sign_tx(\n    unsigned_tx: ITxConverted,\n): Promise<ISignedTx | null> {\n    if (!ergoConnector || !ergoConnector.nautilus) return null;\n    const ctx: any = await ergoConnector.nautilus.getContext();\n    try {\n        return ctx.sign_tx(unsigned_tx);\n    } catch (_) {\n        return null;\n    }\n}\n\nexport async function submit_tx(signed_tx: ISignedTx): Promise<string | null> {\n    if (!ergoConnector || !ergoConnector.nautilus) return null;\n    const ctx: any = await ergoConnector.nautilus.getContext();\n    try {\n        return ctx.submit_tx(signed_tx);\n    } catch (_) {\n        return null;\n    }\n}\n","import {\n\tEXPLORER_URL,\n\tEXPLORER_BLOKCHAIN_HEIGHT_PREFIX\n} from \"../configs/blockchainParameters\";\n\nexport async function getBlockHeight(): Promise<number> {\n\tconst response = await fetch(EXPLORER_URL + EXPLORER_BLOKCHAIN_HEIGHT_PREFIX);\n\tconst body = await response.json();\n\treturn body.items[0].height;\n}\n\n//todo - this is only hardcoded value for mocking right now, in the future it will be completly removed\nconst CURRENT_DIFFICULTY: number = 3186775539318784;\n\nexport async function getTotalDifficultyForBlock(block: number): Promise<number> {\n\t//todo - there will be request for specific explorer/gql api which will provide this number\n\t//currently there don't exist such an API so we will try to approximate it with the CURRENT_DIFFICULTY\n\t//for the purpose of testing and based on Ocam's razor (https://en.wikipedia.org/wiki/Occam%27s_razor)\n\t//it should even be a good approximation (meaning in a good order of magnitude), assuming that\n\t//ergo blockchain hashrate will not change significantly in a timeline until the totalDifficulty get integrated\n\t//into the APIs\n\treturn block * CURRENT_DIFFICULTY;\n}\n\nexport async function getAggregatedDifficultyBetween(stampingBlock: number, currentBlock: number): Promise<number> {\n\tif (stampingBlock > currentBlock) return 0;//throw \"Stamping block cannot be higher number than current block.\"\n\tconst stampingBlockTotalDiff = await getTotalDifficultyForBlock(stampingBlock-1);\n\tconst currentBlockTotalDiff = await getTotalDifficultyForBlock(currentBlock);\n\treturn currentBlockTotalDiff - stampingBlockTotalDiff;\n}\n\nexport async function getAggregatedDifficultySinceBlock(block: number): Promise<number> {\n\tconst currentBlock = await getBlockHeight();\n\treturn getAggregatedDifficultyBetween(block, currentBlock);\n}\n","import { string_data_url } from '../interfaces/stringTypes';\n\nexport async function readFileAsDataUrl(\n    file: File | Blob,\n): Promise<string_data_url> {\n    return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n\n        reader.addEventListener('loadend', (event) =>\n            resolve(event.target!.result as string_data_url),\n        );\n        reader.addEventListener('error', reject);\n\n        reader.readAsDataURL(file);\n    });\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport { string_data_url } from '../../../interfaces/stringTypes';\nimport { readFileAsDataUrl } from '../../../utils/readFileAsDataUri';\nimport { IFilePreviewer } from '../../IFilePreviewerProps';\n\nexport class ImageFilePreview implements IFilePreviewer {\n    public isSupporting(file: File): boolean {\n        return /^image\\/.*/.test(file.type);\n    }\n    public async render(file: File) {\n        const fileData = await readFileAsDataUrl(file);\n        return (\n            // Note: Not using <img> because it doesn't stretch image propperly\n            <ImageFilePreviewDiv {...{ fileData }} />\n        );\n    }\n}\n\nexport const ImageFilePreviewDiv = styled.div<{ fileData: string_data_url }>`\n    width: 100%;\n    height: 100%;\n    background-color: #000;\n    background-image: url(${({ fileData }) => fileData});\n    background-size: cover;\n    background-position: center center;\n`;\n","import React from 'react';\nimport { IFilePreviewer } from '../../IFilePreviewerProps';\nimport { ImageFilePreviewDiv } from '../image/ImageFilePreview';\n\nexport class AudioFilePreview implements IFilePreviewer {\n    public isSupporting(file: File): boolean {\n        return /^audio\\/.*/.test(file.type);\n    }\n    public async render(file: File) {\n        return (\n            // Note: Not using <img> because it doesn't stretch image propperly\n            <ImageFilePreviewDiv fileData=\"./non-image-previews/audio.jpg\" />\n        );\n    }\n}\n\n\n/**\n * TODO: @hejny Generate better preview for audio files\n */","import { string_data_url } from '../interfaces/stringTypes';\n\nexport async function readFileAsText(\n    file: File | Blob,\n): Promise<string_data_url> {\n    return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n\n        reader.addEventListener('loadend', (event) =>\n            resolve(event.target!.result as string),\n        );\n        reader.addEventListener('error', reject);\n\n        reader.readAsText(file);\n    });\n}\n","import React from 'react';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { dark } from 'react-syntax-highlighter/dist/esm/styles/prism';\nimport styled from 'styled-components';\nimport { readFileAsText } from '../../../utils/readFileAsText';\nimport { IFilePreviewer } from '../../IFilePreviewerProps';\n\nexport class CodeFilePreview implements IFilePreviewer {\n    public isSupporting(file: File): boolean {\n        return /^(application|text)\\/.*/.test(file.type);\n    }\n\n    public async render(file: File) {\n        const fileData = await readFileAsText(file);\n        return (\n            <CodeFilePreviewDiv>\n                <SyntaxHighlighter\n                    language=\"javascript\"\n                    style={dark}\n                    showLineNumbers={true}\n                >\n                    {fileData}\n                </SyntaxHighlighter>\n            </CodeFilePreviewDiv>\n        );\n    }\n}\n\nconst CodeFilePreviewDiv = styled.div`\n\n    height: 100%;\n\n    pre {\n        height: 100%;\n        margin: 0!important;\n        padding: 0.2em;!important;\n        border: none!important;\n        box-shadow:none !important;\n        border-radius: 0 !important;\n    }\n\n    .linenumber {\n        min-width: 0 !important;\n    }\n`;\n\n/**\n * TODO: @hejny Dynamically choose programming language\n */\n","import React from 'react';\nimport { IFilePreviewer } from '../../IFilePreviewerProps';\nimport { ImageFilePreviewDiv } from '../image/ImageFilePreview';\n\nexport class UnknownFilePreview implements IFilePreviewer {\n    public isSupporting(file: File): boolean {\n        return true;\n    }\n\n    public async render(file: File) {\n        return (\n            // Note: Not using <img> because it doesn't stretch image propperly\n            <ImageFilePreviewDiv fileData=\"./non-image-previews/unknown.jpg\" />\n        );\n    }\n}\n\n/**\n * TODO: @hejny Better preview for unknown files\n */\n","import { ObjectStorage, PrefixStorage } from 'everstorage';\nimport { string_date } from '../interfaces/stringTypes';\n\nconst cache = new ObjectStorage<{ validTo: string_date; data: any }>(\n    new PrefixStorage(localStorage, 'cache'),\n);\n\n/**\n *\n * @param url\n * @param ttl Time to live in seconds. When -1 provided, data will be valid until page is reloaded.\n * @returns\n */\nexport async function fetchWithCache<T>(\n    url: URL,\n    ttl: number = -1,\n): Promise<T> {\n    // TODO: @hejny Storage with validity to everstorage\n    const cacheItem = await cache.getItem(url.href);\n\n    if (cacheItem) {\n        if (cacheItem.validTo && new Date(cacheItem.validTo) > new Date()) {\n            return cacheItem.data as T;\n        }\n    }\n\n    const response = await fetch(\n        url.href,\n        /*{ mode: 'no-cors' }*/\n    );\n    // console.log({ response });\n    const data = await response.json();\n\n    if (data.error) {\n        throw new Error(data.error);\n    }\n\n    if (ttl !== -1) {\n        await cache.setItem(url.href, {\n            validTo: new Date(Date.now() + ttl * 1000).toISOString(),\n            data,\n        });\n    }\n\n    return data;\n}\n","import { string_hex } from '../interfaces/stringTypes';\n\nexport function shortenHexValue(value: string_hex, length: number): string {\n    const { zeros, rest } = /(?<zeros>0*)(?<rest>[0-9a-f]*)/i.exec(value)!\n        .groups!;\n\n    if (zeros.length === 0) {\n        return rest.substr(0, length - 3) + '…' + rest.substr(-2);\n    } else {\n        return '0…' + rest.substr(0, length - 5) + '…' + rest.substr(-2);\n    }\n}\n","import { fetchWithCache } from '../utils/fetchWithCache';\nimport { shortenHexValue } from '../utils/shortenHexValue';\nimport { IOracle } from './_IOracle';\n\nexport abstract class AbstractBlockcyptherOracle implements IOracle {\n    public abstract name: string;\n    protected abstract titleOfCoin: string;\n\n    /**\n     * Time to live in seconds. When -1 provided, data will be valid until page is reloaded.\n     */\n    protected abstract ttl: number;\n\n    public async getData() {\n        const apiUrl = new URL(\n            `https://api.blockcypher.com/v1/${this.name.toLowerCase()}/main`,\n        );\n\n        try {\n            const { hash } = await fetchWithCache(\n                /*`https://blockchain.info/latestblock`*/\n                /*{ mode: 'no-cors' }*/\n                apiUrl,\n                this.ttl,\n            );\n\n            return [\n                {\n                    title: `${this.titleOfCoin}\\ncurrent block`,\n                    format: 'SHA256 Hash',\n                    value: hash,\n                    source: new URL(\n                        `https://live.blockcypher.com/${this.name.toLowerCase()}/block/${hash}`,\n                        // `https://www.blockchain.com/${this.name.toLowerCase()}/block/${hash}`,\n                    ),\n                    getShortenValue(length: number) {\n                        return shortenHexValue(hash, length);\n                    },\n                },\n            ];\n        } catch (error) {\n            if (error instanceof Error && error.message === 'Failed to fetch') {\n                throw new Error(`Failed to fetch ${apiUrl.href}`);\n            } else {\n                throw error;\n            }\n        }\n    }\n}\n\n/**\n * TODO: !!! @hejny There is problem with API call limits to api.blockcypher.com\n */\n","import { AbstractBlockcyptherOracle } from './_AbstractBlockcyptherOracle';\n\nexport class BitcoinOracle extends AbstractBlockcyptherOracle {\n    public name = 'BTC';\n    protected titleOfCoin = 'Bitcoin';\n    protected ttl = 600;\n}\n","export function get_time_with_timezone(date_arg: Date): string {\n\tconst userTime = date_arg.toLocaleTimeString('en-US', { timeZoneName: 'short', hour12: false });\n\tconst timeZoneName = Intl.DateTimeFormat().resolvedOptions().timeZone;\n\tconst timeZoneOffset = new Date().getTimezoneOffset();\n\tconst timeZoneAbbr = timeZoneOffset < 0 ? '+' : '-';\n\tconst timeZoneFormattedOffset = `${timeZoneAbbr}${Math.abs(Math.floor(timeZoneOffset / 60)).toString().padStart(2, '0')}:${Math.abs(timeZoneOffset % 60).toString().padStart(2, '0')}`;\n\treturn `${userTime} (UTC${timeZoneFormattedOffset} ${timeZoneName})`;\n}\n\n//unixtimestamp in seconds not in miliseconds as is default timestamp in js\nexport function get_time_with_timezone_from_timestamp(unixtimestamp: number): string {\n\treturn get_time_with_timezone(new Date(unixtimestamp * 1000));\n}\n\nexport function get_local_date(date_arg: Date): string{\n\treturn `${date_arg.getFullYear()}-${('0' + date_arg.getMonth()).slice(-2)}-${('0' + date_arg.getDate()).slice(-2)}`;\n}\n\n//unixtimestamp in seconds not in miliseconds as is default timestamp in js\nexport function get_local_date_from_timestamp(unixtimestamp: number): string {\n\tconst date = new Date(unixtimestamp * 1000);\n\treturn get_local_date(date);\n}\n","import { IOracle } from './_IOracle';\nimport { get_time_with_timezone, get_local_date } from \"../scripts/timeUtils\";\n\nexport class DateOracle implements IOracle {\n    public name = 'DATE';\n    public title = 'Current';\n    public ttl = 1;\n\n    public getData() {\n        const date =\n            new Date(/* TODO: @hejny Taking user date can be dangerous, use some remote time. */);\n\n        return [\n            {\n                title: \"UnixTimestamp\",\n                format: \"Count of elapsed seconds since January 1st, 1970 at UTC\",\n                value: Math.floor(date.getTime() / 1000).toString()\n            },\n            {\n                title: 'Date',\n                format: 'YYYY-MM-DD',\n                value: get_local_date(date),\n            },\n            {\n                title: 'Time',\n                format: \"24 hours format in user local timezone\",\n                value: get_time_with_timezone(date)\n            },\n        ];\n    }\n}\n","import { AbstractBlockcyptherOracle } from './_AbstractBlockcyptherOracle';\n\nexport class EthereumOracle extends AbstractBlockcyptherOracle {\n    public name = 'ETH';\n    protected titleOfCoin = 'Ethereum';\n    protected ttl = 12;\n}\n","import { AbstractBlockcyptherOracle } from './_AbstractBlockcyptherOracle';\n\nexport class LitecoinOracle extends AbstractBlockcyptherOracle {\n    public name = 'LTC';\n    protected titleOfCoin = 'Litecoin';\n    protected ttl = 60 * 2.5;\n}\n","import RssParser from 'rss-parser';\nimport { IOracle } from './_IOracle';\n\nexport class RssFeedOracle implements IOracle {\n    constructor(\n        private readonly title: string,\n        private readonly format: string,\n        private readonly url: string,\n    ) {}\n\n    public name = 'NYTIMES';\n    public ttl = -1;\n\n    public async getData() {\n        const rssParser = new RssParser();\n\n        const response = await fetch(this.url /*  { mode: 'no-cors' }*/);\n        const feedText = await response.text();\n        const feed = await rssParser.parseString(feedText);\n\n        // console.log({ feed });\n\n        const firstItem = feed.items[0] as {\n            content: 'Chancellor Olaf Scholz and his new cabinet were sworn in, beginning a new chapter for Europe’s largest democracy. Angela Merkel wished him well and called the chancellorship “one of the most beautiful duties there are.”';\n            contentSnippet: 'Chancellor Olaf Scholz and his new cabinet were sworn in, beginning a new chapter for Europe’s largest democracy. Angela Merkel wished him well and called the chancellorship “one of the most beautiful duties there are.”';\n            creator: 'The New York Times';\n            'dc:creator': 'The New York Times';\n            guid: 'https://www.nytimes.com/live/2021/12/08/world/germany-scholz-merkel';\n            isoDate: '2021-12-08T18:38:54.000Z';\n            link: 'https://www.nytimes.com/live/2021/12/08/world/germany-scholz-merkel';\n            pubDate: 'Wed, 08 Dec 2021 18:38:54 +0000';\n            title: 'Germany’s Merkel Hands Over Chancellor’s Office to Scholz';\n        };\n\n        return [\n            {\n                title: this.title,\n                format: this.format,\n                value: firstItem.title,\n                source: new URL(firstItem.link),\n                /*\n                TODO: @hejny Maybe implement this:\n                getShortenValue(length: number) {\n                    return firstTitle.substr(0, length);\n                },\n                */\n            },\n        ];\n    }\n}\n","import { ConfigChecker } from 'configchecker';\nimport { Vector } from 'xyzt';\n///* tslint:disable:no-var-requires */\n//const packageJson = require('../package.json');\nimport { version } from '../package.json';\nimport { IFilePreviewer } from './filePreview/IFilePreviewerProps';\nimport { AudioFilePreview } from './filePreview/mimeTypes/audio/AudioFilePreview';\nimport { ImageFilePreview } from './filePreview/mimeTypes/image/ImageFilePreview';\nimport { CodeFilePreview } from './filePreview/mimeTypes/misc/CodeFilePreview';\nimport { UnknownFilePreview } from './filePreview/mimeTypes/misc/UnknownFilePreview';\nimport { BitcoinOracle } from './oracles/BitcoinOracle';\nimport { DateOracle } from './oracles/DateOracle';\nimport { EthereumOracle } from './oracles/EthereumOracle';\nimport { LitecoinOracle } from './oracles/LitecoinOracle';\nimport { RssFeedOracle } from './oracles/RssFeedOracle';\nimport { IOracle } from './oracles/_IOracle';\n\nexport const VERSION = version;\n\nexport const ORACLES: IOracle[] = [\n    new BitcoinOracle(),\n    new EthereumOracle(),\n    new LitecoinOracle(),\n    new DateOracle(),\n\n    /*\n    Note: Not working CORS in Firefox\n    new NytimesOracle(),\n    */\n\n    /*\n    Note: Not working CORS in Chrome and Firefox\n    new RssFeedOracle(\n        'TechCrunch',\n        'Front page title',\n        'https://techcrunch.com/feed/',\n    ),\n    */\n\n    /*\n    Note: Not working CORS in Chrome and Firefox\n    new RssFeedOracle(\n        'Huffington post',\n        'Front page title',\n        'https://chaski.huffpost.com/us/auto',\n    ),\n    */\n\n    new RssFeedOracle(\n        'Washington  post',\n        'Front page title',\n        'https://feeds.washingtonpost.com/rss/world',\n    ),\n\n    /**\n     * TODO: @hejny Add more news sources\n     * @see https://medium.com/rakuten-rapidapi/top-10-best-news-apis-google-news-bloomberg-bing-news-and-more-bbf3e6e46af6\n     */\n];\n\nexport const FILE_PREVIEWERS: IFilePreviewer[] = [\n    new ImageFilePreview(),\n    new AudioFilePreview(),\n    new CodeFilePreview(),\n    new UnknownFilePreview(),\n];\n\nexport const PAGE_DEBUG = false;\nexport const PAGE_MM_TO_PX_RATIO = 2;\nexport const PAGE_SIZE = new Vector(210, 297);\n// TODO: @hejny Maybe in second stage USA format of papers - Letter / B type\n\nconst config = ConfigChecker.from(process.env);\n\nexport const BUILD_DETAILS_URL = config\n    .get(\n        'REACT_APP_BUILD_DETAILS_URL' /* TODO: @hejny configchecker can ignore prefxes in ConfigChecker.from */,\n    )\n    .url().value;\n\nexport const BUILD_DATE = config\n    .get(\n        'REACT_APP_BUILD_DATE' /* TODO: @hejny configchecker can ignore prefxes in ConfigChecker.from */,\n    )\n    .date().value;\n","import { createGlobalStyle } from 'styled-components';\n\n// Note: Do not use this file for local components and all CSS logic put into styled components\n\nexport const GlobalStyle = createGlobalStyle`\n\n\n\n\n    body {\n        margin: 0;\n    }\n\n\n    button, .button {\n      outline: none;\n        background-color: rgb(242, 242, 242);\n        color: rgb(78, 78, 78);\n\n        border-radius: 6px;\n        padding: 7px 18px;\n        font-size: 0.9em;\n        margin: 0 5px;\n        cursor: pointer;\n        display: inline-block;\n        text-decoration: none;\n    }\n\n    a, a:visited {\n      color: #333;\n    }\n`;\n\n/**\n * TODO: @hejny Dark/light theme from system\n * TODO: @hejny Dark/light theme toggle\n */\n","export default __webpack_public_path__ + \"static/media/how-it-works.54be607a.md\";","export default __webpack_public_path__ + \"static/media/mobile-device.b08e8c13.md\";","export default __webpack_public_path__ + \"static/media/FAQ.18bc151e.md\";","export default __webpack_public_path__ + \"static/media/wiki.8acea3d0.md\";","/**\n *\n * @generator https://sharegpt.com/c/sbKz8rA\n */\nexport function addTooltipToLinks(element: HTMLElement) {\n    const seltUrl = new URL(window.location.href);\n\n    const links = element.querySelectorAll('a');\n    for (const link of links) {\n        const url = new URL(link.href);\n\n        if (url.origin !== seltUrl.origin) {\n            continue;\n        }\n\n        const tooltip = document.createElement('div');\n        tooltip.classList.add('tooltip');\n        tooltip.style.position = 'fixed';\n        tooltip.style.visibility = 'hidden';\n        tooltip.style.width = '300px';\n        tooltip.style.height = '200px';\n        tooltip.style.border = 'none';\n        tooltip.style.zIndex = '10000';\n        document.body.appendChild(tooltip);\n\n        link.addEventListener('mouseover', (event) => {\n            const iframe = document.createElement('iframe');\n            iframe.src = url.href;\n\n            iframe.style.width = '100%';\n            iframe.style.height = '100%';\n            iframe.style.border = 'none';\n            iframe.style.overflow = 'hidden';\n            //iframe.style.border = '1px solid #888';\n            iframe.style.boxShadow = '#333 0 0 10px';\n            iframe.style.borderRadius = '6px';\n            tooltip.appendChild(iframe);\n            tooltip.style.top = `${event.clientY + 10}px`;\n            tooltip.style.left = `${event.clientX + 10}px`;\n            tooltip.style.visibility = 'visible';\n        });\n\n        link.addEventListener('mousemove', (event) => {\n            tooltip.style.top = `${event.clientY + 10}px`;\n            tooltip.style.left = `${event.clientX + 10}px`;\n        });\n\n        link.addEventListener('mouseout', () => {\n            tooltip.style.visibility = 'hidden';\n            tooltip.innerHTML = '';\n        });\n    }\n}\n","import { Converter } from 'showdown';\nimport showdownHighlight from 'showdown-highlight';\nimport { spaceTrim } from 'spacetrim';\nimport styled from 'styled-components';\nimport { addTooltipToLinks } from '../utils/addTooltipToLinks';\nimport { useAsyncMemo } from '../utils/useAsyncMemo';\nimport { useHash } from '../utils/useHash';\n\ninterface IArticleProps {\n    /**\n     * Path to source markdown\n     */\n    src: string;\n}\n\nexport function Article({ src }: IArticleProps) {\n    const hash = useHash();\n    const { error, content } = useAsyncMemo<{\n        content: string | null;\n        error: Error | null;\n    }>(async () => {\n        try {\n            const response = await fetch(src);\n            const mimeType = response.headers.get('content-type');\n\n            if (!mimeType || !/^text\\/markdown/.test(mimeType)) {\n                return {\n                    content: null,\n                    error: new Error(\n                        spaceTrim(`\n                            Unexpected mime-type in article src\n                            Fetching \"${src}\"\n                            Expected \"text/markdown\" got \"${mimeType}\"\n                        `),\n                    ),\n                };\n            }\n\n            return { content: await response.text(), error: null };\n        } catch (error) {\n            if (!(error instanceof Error)) {\n                throw error;\n            }\n            return { content: null, error };\n        }\n    }, [src]) || { content: null, error: null };\n\n    if (!error && !content) {\n        return <>{/* TODO: Some loading */}</>;\n    }\n\n    if (error) {\n        console.error(error);\n        return <>{/* TODO: Some error indication */}</>;\n    }\n\n    const markdown = content;\n    converter.setFlavor('github');\n    const html = converter.makeHtml(markdown);\n\n    const currentSubsection = hash.substring(1);\n\n    return (\n        <>\n            <ArticleDiv\n                dangerouslySetInnerHTML={{ __html: html }}\n                ref={(element) => {\n                    if (!element) {\n                        return;\n                    }\n\n                    if (currentSubsection) {\n                        const section = element.querySelector(\n                            `#${currentSubsection}`,\n                        );\n\n                        if (section) {\n                            section.scrollIntoView(true);\n                        }\n                    }\n\n                    addTooltipToLinks(element);\n                }}\n            />\n            <style>\n                {!currentSubsection\n                    ? ``\n                    : `\n                        #${currentSubsection}{\n                          color: #1b73f7;\n                        }\n\n                        /*\n                        TODO: Also all items to the next heading\n                        #${currentSubsection} + * {\n                          color: red;\n                        }\n                        */\n\n              `}\n            </style>\n        </>\n    );\n}\n\nconst converter = new Converter({\n    extensions: [\n        showdownHighlight({\n            // Whether to add the classes to the <pre> tag, default is false\n            pre: true,\n            // Whether to use hljs' auto language detection, default is true\n            auto_detection: true,\n        }),\n    ],\n});\n\nconst ArticleDiv = styled.div`\n    /*/\n    outline: 1px dashed red;\n    /**/\n\n    * {\n        scroll-margin-top: 2em;\n    }\n\n    @media (max-width: 350px) and (max-width: 300px) {\n        * {\n            scroll-margin-top: 0;\n        }\n    }\n\n    img {\n        max-width: 50%;\n        max-height: 50%;\n    }\n\n    /*\n    table {\n        border-collapse: collapse;\n    }\n    */\n\n    table,\n    th,\n    td {\n        border: none;\n    }\n\n    table tr:nth-child(even) {\n        background-color: rgba(255, 255, 255, 0.05);\n    }\n\n    table th {\n        background-color: rgba(255, 255, 255, 0.1);\n        text-align: center;\n    }\n\n    table th,\n    table td {\n        padding: 5px;\n    }\n`;\n","import { useEffect, useState } from 'react';\n\n/**\n * A React hook that observes changes to window.location.hash.\n * @returns The current hash value.\n * @generator https://sharegpt.com/c/Jwq09Pe\n */\nexport function useHash(): string {\n    const [hash, setHash] = useState(window.location.hash);\n\n    useEffect(() => {\n        /**\n         * Updates the hash state with the current hash value.\n         */\n        const handleHashChange = () => {\n            setHash(window.location.hash);\n        };\n\n        window.addEventListener('hashchange', handleHashChange);\n\n        return () => {\n            window.removeEventListener('hashchange', handleHashChange);\n        };\n    }, []);\n\n    return hash;\n}\n","import React from 'react';\n\n/**\n * React hook for generating async memoized data.\n * This is a copy of @see https://github.com/awmleer/use-async-memo/blob/master/src/index.ts\n */\nexport function useAsyncMemo<TValue>(factory: () => Promise<TValue>, deps: React.DependencyList): TValue | null {\n    const [value, setValue] = React.useState/* <- TODO: Import and use just a useState */ <TValue | null>(null);\n    React.useEffect(\n        /* <- TODO: Import and use just a useEffect */ () => {\n            let cancel = false;\n            const promise = factory();\n            if (promise === undefined || promise === null) return;\n            promise.then((val2) => {\n                if (!cancel) {\n                    setValue(val2);\n                }\n            });\n            return () => {\n                cancel = true;\n            };\n        },\n        // Note: Passing correct deps is up to useAsyncMemo caller.\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        deps,\n    );\n    return value;\n}\n\n/**\n * TODO: Handle errors here\n * Note: Hook for modules must use same React as the main Collboard app\n *       So this is a copy of @see https://github.com/awmleer/use-async-memo/blob/master/src/index.ts\n * TODO: [🧵] Move to external LIB for react loadables\n */\n","import React from 'react';\nimport styled from 'styled-components';\n\nexport function Center({\n    children,\n    isFlexed,\n    className,\n}: React.PropsWithChildren<{ isFlexed?: boolean; className?: string }>) {\n    return (\n        <CenterDiv className={`outer ${className}`}>\n            {isFlexed ? (\n                children\n            ) : (\n                <div className={`inner ${className}`}>{children}</div>\n            )}\n        </CenterDiv>\n    );\n}\n\nconst CenterDiv = styled.div`\n    /*/\n\n    outline: 1px dashed red;\n\n    & > * {\n        outline: 1px dashed yellow;\n    }\n\n    /**/\n\n    position: flex;\n    flex-direction: column;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    .inner {\n    }\n`;\n","import styled from 'styled-components';\n\ninterface ILogoComponentProps {\n    isWatermark?: boolean;\n}\n\nexport function LogoComponent({ isWatermark }: ILogoComponentProps) {\n    return (\n        <LogoElement>\n            <img\n                className=\"logo\"\n                alt=\"SigmaStamp logo\"\n                src={`./sigmastamp-logo.grey.svg`}\n            />\n\n            {!isWatermark && (\n                <div>\n                    <h1 className=\"name\">SigmaStamp</h1>\n                    <p className=\"claim\">\n                        Timestamp your\n                        <br />\n                        <b>documents</b>\n                    </p>\n                </div>\n            )}\n        </LogoElement>\n    );\n}\nconst LogoElement = styled.div`\n    /*/\n    outline: 1px dashed red; /**/\n\n    display: flex;\n    font-family: 'Oswald', sans-serif;\n    color: white;\n\n    img.logo {\n        width: 5rem;\n    }\n\n    h1.name {\n        display: block;\n        font-size: 1.5em;\n        margin: 0;\n    }\n\n    p.claim {\n        display: block;\n        font-size: 1em;\n        margin: 0;\n    }\n`;\n","/**\n * Note: Routes are in separate javascript (not typescript) file to allow it import from postprocess-build script\n */\n\nexport const ROUTES = {\n    // Currently used pages:\n    Root: '/',\n    VerificationPage: '/verify',\n    Blockchains: '/blockchains',\n    Oracles: '/oracles',\n    SampleCertificates: '/sample-certificates',\n    Faq: '/faq',\n    Playground: '/stamp',\n    TechnicalStatus: '/status',\n    About: '/about',\n    Routes: '/routes',\n    HowItWorks: '/manual',\n    Mobile: '/mobile-device',\n    Wiki: 'wiki',\n\n    // Deprecated pages (but kept because they are still referenced somewhere):\n    FirstCertificate: '/first-certificate',\n};\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { ROUTES } from '../routes.mjs';\nimport { isRunningOnMobileDevice } from '../utils/isRunningOnMobileDevice';\nimport { usePersistentState } from '../utils/usePersistentState';\n\nexport function Notifications() {\n    const [isMobileDeviceWarning, setMobileDeviceWarning] = usePersistentState(\n        'isMobileDeviceWarning',\n        isRunningOnMobileDevice(),\n    );\n\n    return (\n        <NotificationsDiv className=\"notifications\">\n            {isMobileDeviceWarning && (\n                <NotificationDiv className=\"notification\">\n                    On mobile devices SigmaStamp has limited capabilities.\n                    <Link\n                        className=\"button\"\n                        to={ROUTES.Mobile}\n                        onClick={() => void setMobileDeviceWarning(false)}\n                    >\n                        See more\n                    </Link>\n                    <Link\n                        className=\"button\"\n                        to={ROUTES.Mobile}\n                        onClick={() => void setMobileDeviceWarning(false)}\n                    >\n                        Dismiss\n                    </Link>\n                </NotificationDiv>\n            )}\n        </NotificationsDiv>\n    );\n}\n\nconst NotificationsDiv = styled.div`\n    /*/\n    outline: 1px dashed green; /**/\n\n    pointer-events: none;\n    z-index: 10010;\n\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    padding: 5px;\n\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    @media (max-width: 850px) {\n        top: unset;\n        bottom: 0;\n    }\n`;\n\nconst NotificationDiv = styled.div`\n    /*/\n    outline: 1px dashed red; /**/\n\n    pointer-events: all;\n\n    padding: 10px;\n    border-radius: 5px;\n    background-color: #a3b168;\n`;\n\n/**\n * TODO: Here should be also EU cookies warning\n */\n","import { Dispatch, SetStateAction, useEffect, useState } from 'react';\n\n/**\n * A custom hook that provides persistent state that is saved in `localStorage`.\n *\n * @template T The type of the state value.\n * @param {string} key The key used to store the state in `localStorage`.\n * @param {T} initialValue The initial value of the state.\n * @returns {[T, Dispatch<SetStateAction<T>>]} A tuple containing the current state and a function to update it.\n * @generator https://sharegpt.com/c/CiDAHqq\n */\nexport function usePersistentState<T>(\n    key: string,\n    initialValue: T,\n): [T, Dispatch<SetStateAction<T>>] {\n    const [state, setState] = useState<T>(() => {\n        const valueInLocalStorage = window.localStorage.getItem(key);\n        if (valueInLocalStorage) {\n            return JSON.parse(valueInLocalStorage);\n        }\n        return initialValue;\n    });\n\n    useEffect(() => {\n        window.localStorage.setItem(key, JSON.stringify(state));\n    }, [key, state]);\n\n    return [state, setState];\n}\n","export function isRunningOnMobileDevice() {\n    if (\n        /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(\n            navigator.userAgent,\n        )\n    ) {\n        return true;\n    } else {\n        return false;\n    }\n}\n","import styled from 'styled-components';\n\nexport function NotFoundPage() {\n    return (\n        <NotFoundPageDiv>\n            <h2>Not found</h2>\n            We are sorry, this page is not found.\n        </NotFoundPageDiv>\n    );\n}\n\nconst NotFoundPageDiv = styled.div``;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { LogoComponent } from \"../../components/LogoComponent\";\n\nexport function HomePage() {\n\treturn (\n\t\t<HomePageDiv>\n\t\t\t<div className=\"logodiv\">\n\t\t\t<h1>SigmaStamp</h1>\n\t\t\t</div>\n\t\t\t<p>Are you an artist, write or creator?</p>\n\t\t\t<p>Or maybe you are a landord or tenant?</p>\n\t\t\t<p>Want you to prove to somebody that you were at some place at a specific time?</p>\n\t\t\t<p>In all of these situations you may find the SigmaStamp project helpful for you :-)</p>\n\t\t\t<p>See example usages of SigmaStamp project <Link to=\"/wiki#examples-of-sigmastamp-usage\" target=\"_blank\" rel=\"noopener noreferrer\">here</Link>.</p>\n\t\t</HomePageDiv>\n\t);\n}\n\nconst HomePageDiv = styled.div`\n    img.logo {\n        width: 400px;\n    }\n    h1{\n    \ttext-decoration: !none;\n    \ttext-align: center;\n    }\n    .logoDiv{\n    \ttext-align: center;\n    }\n    p{\n    \tfont-size: 1.5rem;\n    }\n`;\n","export function findDeepestChild(element: HTMLElement): HTMLElement {\n    if (element.children.length === 0) {\n        return element;\n    } else {\n        return findDeepestChild(element.children[0] as HTMLElement);\n    }\n}\n","import html2canvas from 'html2canvas';\nimport { jsPDF } from 'jspdf';\nimport { forAllImagesInElement, forEver } from 'waitasecond';\nimport { Vector } from 'xyzt';\nimport { PAGE_DEBUG, PAGE_MM_TO_PX_RATIO, PAGE_SIZE } from '../config';\nimport { findDeepestChild } from '../utils/findDeepestChild';\n\nexport async function createPdf(containerElement: HTMLElement): Promise<Blob> {\n    const pdfDocument = new jsPDF('p', 'mm', PAGE_SIZE.toArray2D());\n    // TODO: @hejny Add metadata to PDF\n\n    await forAllImagesInElement(containerElement);\n\n    const canvas = await html2canvas(containerElement, {\n        scale: 3 /* TODO: @hejny What is the ideal quality */,\n        backgroundColor: 'trasparent',\n        allowTaint: true,\n        // removeContainer: true,\n        ignoreElements: (element) => {\n            if (PAGE_DEBUG) {\n                return false;\n            } else {\n                return element.classList.contains('render-as-text');\n            }\n        },\n    });\n\n    const image = canvas.toDataURL('image/png' /* TODO: Configure quality */);\n\n    if (PAGE_DEBUG) {\n        canvas.style.width = PAGE_SIZE.x * PAGE_MM_TO_PX_RATIO + 'px';\n        canvas.style.height = PAGE_SIZE.y * PAGE_MM_TO_PX_RATIO + 'px';\n        canvas.style.border = '1px solid red';\n        canvas.style.position = 'fixed';\n        canvas.style.bottom = '20px';\n        canvas.style.right = '20px';\n        document.body.appendChild(canvas);\n    }\n\n    pdfDocument.addImage(\n        // TODO: @hejny Compression of the image\n        image,\n        'JPEG',\n        0,\n        0,\n        ...PAGE_SIZE.toArray2D(),\n    );\n\n    const containerBoundingBox = containerElement.getBoundingClientRect();\n    const originPosition = Vector.fromObject(containerBoundingBox, [\n        'left',\n        'top',\n    ]);\n    const containerSize = Vector.fromObject(containerBoundingBox, [\n        'width',\n        'height',\n    ]);\n\n    pdfDocument.addFont('Times New Roman', 'Times', 'serif');\n    // TODO: @hejny Remove unnessesary fonts from the document\n    //   console.log(pdfDocument.getFontList());\n\n    for (const textElement of Array.from(\n        containerElement.querySelectorAll('.render-as-text'),\n    ) as HTMLElement[]) {\n        const positionInPdf = Vector.fromObject(\n            textElement.getBoundingClientRect(),\n            ['left', 'top'],\n        )\n            .subtract(originPosition)\n            .divide(containerSize)\n            .multiply(PAGE_SIZE)\n            .add(new Vector(0, 0.5));\n\n        const textElementDeepestChild = findDeepestChild(textElement);\n\n        const fontSize = parseFloat(\n            window\n                .getComputedStyle(textElementDeepestChild, null)\n                .getPropertyValue('font-size'),\n        );\n\n        const fontWeight = parseFloat(\n            window\n                .getComputedStyle(textElementDeepestChild, null)\n                .getPropertyValue('font-weight'),\n        );\n\n        const fontStyle = fontWeight > 400 ? 'bold' : 'normal';\n\n        const fontSizeInPdf =\n            fontSize * (PAGE_SIZE.y / containerSize.y) * 2.83464566929;\n\n        pdfDocument.setFontSize(fontSizeInPdf);\n\n        pdfDocument.setFont('Times', fontStyle);\n        pdfDocument.text(textElement.innerText, ...positionInPdf.toArray2D(), {\n            baseline: 'top',\n        });\n\n        // console.log(textElement.innerText, ...positionInPdf.toArray2D());\n    }\n\n    // containerElement.style.display = 'none';\n\n    if (PAGE_DEBUG) {\n        pdfDocument.save('test.pdf');\n        // TODO: @hejny Maybe debug throught new tab> console.log(pdfDocument.output('datauri'));\n        await forEver();\n    }\n\n    return pdfDocument.output('blob');\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Promisable } from 'type-fest';\nimport { PAGE_MM_TO_PX_RATIO, PAGE_SIZE } from '../config';\nimport { createPdf } from '../pdf/createPdf';\n\ninterface IPdfPageProps extends React.PropsWithChildren<{}> {\n    renderUi: (options: {\n        createPdf: () => Promise<Blob>;\n    }) => Promisable<JSX.Element | JSX.Element[]>;\n}\n\nexport function PdfPage(props: IPdfPageProps) {\n    const pageRef = React.useRef<HTMLDivElement>(null);\n\n    return (\n        <PdfPageDiv>\n            {props.renderUi({\n                createPdf: async () => {\n                    const containerElement = pageRef.current;\n\n                    if (!containerElement) {\n                        throw new Error('Problem with rendering to PDF.');\n                    }\n\n                    const pdfBlob = await createPdf(containerElement);\n\n                    return pdfBlob;\n                },\n            })}\n            <div className=\"preview\" ref={pageRef}>\n                {props.children}\n            </div>\n        </PdfPageDiv>\n    );\n}\n\nconst PdfPageDiv = styled.div`\n    width: ${PAGE_SIZE.x * PAGE_MM_TO_PX_RATIO}px;\n\n    .preview {\n        //overflow: hidden;\n        width: ${PAGE_SIZE.x * PAGE_MM_TO_PX_RATIO}px;\n        height: ${PAGE_SIZE.y * PAGE_MM_TO_PX_RATIO}px;\n        //box-shadow: #5e97ccb7 0px 0px 50px;\n\n        background-color: white;\n        color: black;\n\n        /* Note: It the printed certificate there is better to use serif font */\n        font-family: 'Times New Roman', Times, serif;\n    }\n\n    .preview img.logo {\n        width: 50px;\n        opacity: 0.5;\n    }\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { PAGE_MM_TO_PX_RATIO } from '../config';\nimport { Center } from './Center';\n\nexport type IUploadZoneProps = React.PropsWithChildren<{\n    isClickable?: boolean;\n    onFilesOver?: (isFileOver: boolean) => void;\n    onFiles: (droppedFiles: File[]) => void;\n}>;\n\nexport function UploadZone({\n    children,\n    isClickable,\n    onFilesOver,\n    onFiles,\n}: IUploadZoneProps) {\n    const [isFilesOver, setFilesOver] = React.useState(false);\n\n    const onFileOverWrapper = (isFileOver: boolean) => {\n        setFilesOver(isFileOver);\n\n        if (onFilesOver) {\n            onFilesOver(isFileOver);\n        }\n    };\n\n    let uploadClick: () => void;\n\n    return (\n        <UploadZoneDiv\n            className={isFilesOver ? 'files-over' : ''}\n            onClick={() => {\n                if (isClickable) {\n                    uploadClick();\n                }\n            }}\n            onMouseEnter={() => {\n                onFileOverWrapper(true);\n            }}\n            onMouseLeave={() => {\n                onFileOverWrapper(false);\n            }}\n            onDragEnter={(event) => {\n                event.stopPropagation();\n                event.preventDefault();\n            }}\n            onDragOver={(event) => {\n                event.stopPropagation();\n                event.preventDefault();\n                onFileOverWrapper(true);\n            }}\n            onDragExit={(event) => {\n                event.stopPropagation();\n                event.preventDefault();\n                onFileOverWrapper(false);\n            }}\n            onDragEnd={(event) => {\n                event.stopPropagation();\n                event.preventDefault();\n                onFileOverWrapper(false);\n            }}\n            onDragEndCapture={(event) => {\n                event.stopPropagation();\n                event.preventDefault();\n                onFileOverWrapper(false);\n            }}\n            onDrop={(event) => {\n                event.preventDefault();\n                event.stopPropagation();\n                onFileOverWrapper(false);\n\n                const files = Array.from(event.dataTransfer.files); // TODO: @hejny Maybe there should be event.dataTransfer.items handler\n                onFiles(files);\n            }}\n        >\n            <input\n                type=\"file\"\n                multiple\n                ref={(element) => {\n                    if (element) {\n                        uploadClick = () => {\n                            onFileOverWrapper(true);\n                            (element as HTMLInputElement).click();\n                        };\n                    }\n                }}\n                onChange={(event) => {\n                    if (!event || !event.target || !event.target.files) return;\n                    onFiles(Array.from(event.target.files));\n                }}\n            />\n            <Center className={'upload-inner'}>{children}</Center>\n        </UploadZoneDiv>\n    );\n}\n\nconst PADDING = 100;\nconst UploadZoneDiv = styled.div`\n    width: ${210 * PAGE_MM_TO_PX_RATIO - 2 * PADDING}px;\n    height: ${297 * PAGE_MM_TO_PX_RATIO - 2 * PADDING}px;\n    padding: ${PADDING}px;\n    border: 5px dashed #cccccc;\n    border-radius: 5px;\n\n    input {\n        display: none;\n    }\n\n    transition: border-color 0.2s ease;\n    .upload-inner {\n        transition: transform 0.1s ease;\n    }\n\n    &.files-over {\n        border-color: #009edf;\n    }\n\n    &.files-over .upload-inner {\n        transform: scale(105%);\n    }\n`;\n\n/**\n * TODO: @hejny Probbably when there is only one UploadZone rendered on entire page, expand invisible dropzone to full page\n * TODO: @hejny Do not allow to drop placeholder of SigmaStamp logo\n * TODO: @hejny Allow to recieve item from Clipboard\n */\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Center } from './Center';\nimport { LogoComponent } from './LogoComponent';\n\nexport function UploadZoneSigmastampContent({\n    children,\n}: React.PropsWithChildren<{}>) {\n    return (\n        <UploadZoneContentDiv>\n            <Center isFlexed>\n                <LogoComponent isWatermark />\n                {children}\n            </Center>\n        </UploadZoneContentDiv>\n    );\n}\n\nconst UploadZoneContentDiv = styled.div`\n    font-size: 1.5em;\n    opacity: 0.5;\n    text-align: center;\n\n    color: #888;\n\n    img.logo {\n        display: block;\n        width: 230px;\n        transform: translateX(8%);\n    }\n`;\n","export function readFileAsArrayBuffer(file: File | Blob): Promise<ArrayBuffer> {\n    return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n\n        reader.addEventListener('loadend', (event) =>\n            resolve(event.target!.result as ArrayBuffer),\n        );\n        reader.addEventListener('error', reject);\n\n        reader.readAsArrayBuffer(file);\n    });\n}\n","import { readFileAsArrayBuffer } from './readFileAsArrayBuffer';\n\nexport async function readFileAsByteArray(file: File | Blob): Promise<Uint8Array> {\n    return new Uint8Array(await readFileAsArrayBuffer(file));\n}\n","export function uint8ArrayToHex(uint8Array: Uint8Array) {\n    return [...uint8Array].map((x) => x.toString(16).padStart(2, '0')).join('');\n}\n","// @ts-ignore: no typings\nimport { blake2bFinal, blake2bInit, blake2bUpdate } from 'blakejs';\nimport { string_hex } from '../interfaces/stringTypes';\nimport { readFileAsByteArray } from '../utils/readFileAsByteArray';\nimport { uint8ArrayToHex } from '../utils/uint8ArrayToHex';\n\nexport async function blake2b256(input: File | Blob): Promise<string_hex> {\n    const KEY = null; // optional key\n    const OUTPUT_LENGTH = 32; // bytes\n    const context = blake2bInit(OUTPUT_LENGTH, KEY || undefined);\n\n    // each time you get a byte array from the stream:\n    blake2bUpdate(context, await readFileAsByteArray(input));\n\n    // finally, once the stream has been exhausted\n    const hashUint8Array = blake2bFinal(context);\n    // returns a 64-byte hash, as a Uint8Array\n\n    const hash = uint8ArrayToHex(hashUint8Array);\n\n    return hash;\n}\n","import { blake2b256 } from '../hash/blake2b256';\n\nimport {\n    EXPLORER_URL,\n    EXPLORER_BOX_INFO_PREFIX,\n    EXPLORER_TOKEN_SEARCH_PREFIX,\n    EXPLORER_TRANSACTION_INFO_PREFIX,\n    EXPLORER_UNSPENT_BOXES_BY_TOKEN_ID_PREFIX\n} from \"../configs/blockchainParameters\";\n\nimport {\n    SIGMASTAMP_NFT_NAME,\n    SIGMASTAMP_ASSET_TYPE\n} from \"../configs/SigmaStampConfig\";\n\n/**\n * TODO: rename function below\n */\nexport async function validateFirstCertificate(firstCertificate: File) {\n    const hash = await blake2b256(firstCertificate);\n\n    const tokensResponse = await fetch(\n        EXPLORER_URL + EXPLORER_TOKEN_SEARCH_PREFIX + SIGMASTAMP_NFT_NAME,\n    );\n    const tokensBody = await tokensResponse.json();\n\n    for (const item of tokensBody.items) {\n        //skip non-NFTs\n        if (item.emissionAmount !== 1) continue;\n\n        const boxId = item.boxId;\n\n        const boxesResponse = await fetch(\n            EXPLORER_URL + EXPLORER_BOX_INFO_PREFIX + `${boxId}`,\n        );\n\n        const boxesBody = await boxesResponse.json();\n\n        //skip non-SigmaStampNFT types\n        if (boxesBody.additionalRegisters.R7.renderedValue !== SIGMASTAMP_ASSET_TYPE) continue;\n\n        if (boxesBody.additionalRegisters.R8.renderedValue === `${hash}`) {\n            return boxesBody;\n        }\n    }\n\n    return null;\n}\n\n//TODO: @nitram147 - function to check whether is hash already in blockchain\n//it would be similar to validateFirstCertificate function\n//maybe it would be great to extract the core functionality into one function and then only make wrapper for it (so validateFirstCertificate will be only a wrapper)\n\nexport async function getTransactionTime(txId: string) {\n    const response = await fetch(\n        EXPLORER_URL + EXPLORER_TRANSACTION_INFO_PREFIX + `${txId}`,\n    );\n    const body = await response.json();\n\n    console.log('getTransactionTime', body);\n\n    //api is returning timestamp in miliseconds !!!\n    const timestamp = Math.floor(body.timestamp / 1000);\n    const tokenId = body.outputs[0].assets[0].tokenId;\n\n    return { timestamp, tokenId };\n}\n\n// TODO @hejny <- @nitram147 Unhardcode API URL move it to the config file\nexport async function getNFTHolderAddress(tokenId: string) {\n    const response = await fetch(\n        EXPLORER_URL + EXPLORER_UNSPENT_BOXES_BY_TOKEN_ID_PREFIX + `${tokenId}`,\n    );\n    const body = await response.json();\n\n    console.log('getNFTHolderAddress', body);\n\n    //check that there is only one holder (it means that it is NFT and also that it exists)\n    if (body.total !== 1) return null;\n\n    return body.items[0].address;\n}\n","import React from 'react';\nimport styled from 'styled-components';\n\nexport function Loader() {\n    return (\n        <LoaderDiv>\n            <div className=\"spinner\"></div>\n        </LoaderDiv>\n    );\n}\n\nconst LoaderDiv = styled.div``;\n","import QRCodeGenerator, { QRCodeRenderersOptions } from 'qrcode';\nimport React from 'react';\n\ninterface IQRCodeProps extends QRCodeRenderersOptions {\n    text: string;\n}\n\nexport function QRCode(props: IQRCodeProps) {\n    const { text } = props;\n    return (\n        <canvas\n            className=\"qrcode\"\n            ref={(canvasElement) => {\n                if (!canvasElement) {\n                    return;\n                }\n\n                // Note: Making some manipulation (probbably) due to internal errors of qrcode library\n                const options: QRCodeRenderersOptions = { ...props };\n                delete (options as any).href;\n                options.color = options.color || {};\n\n                QRCodeGenerator.toCanvas(\n                    canvasElement,\n                    text,\n                    options,\n                    (error) => {\n                        if (error) {\n                            console.error(error);\n                        }\n                        // console.log('success!');\n                    },\n                );\n            }}\n        />\n    );\n}\n","import { QRCodeRenderersOptions } from 'qrcode';\nimport React from 'react';\nimport { QRCode } from './QRCode';\n\ninterface IQRCodeLinkProps extends QRCodeRenderersOptions {\n    link: URL;\n}\n\nexport function QRCodeLink(props: IQRCodeLinkProps) {\n    const href = props.link.href;\n\n    return (\n        <a {...{ href }} target=\"_blank\" rel=\"noopener noreferrer\">\n            <QRCode text={href} {...props} />\n        </a>\n    );\n}\n","import React from 'react';\nimport Countdown from 'react-countdown';\nimport { catchError, map, of } from 'rxjs';\nimport styled from 'styled-components';\nimport { IPaymentStatus } from '../interfaces/IPaymentStatus';\nimport { ergo_wallet_address, nanoerg } from '../interfaces/stringTypes';\nimport { Loader } from './Loader';\nimport { ObservableContentComponent } from './ObservableContentComponent';\nimport { QRCodeLink } from './QRCodeLink';\n\nexport interface IPaymentGateProps {\n    amount: nanoerg;\n    address: ergo_wallet_address;\n    dueDate: Date;\n    paymentStatus: IPaymentStatus;\n}\n\nexport function PaymentGate({\n    amount,\n    address,\n    dueDate,\n    paymentStatus,\n}: IPaymentGateProps) {\n    const link = new URL(\n        `https://explorer.ergoplatform.com/payment-request?address=${address}&amount=${\n            amount / 1000000000\n        }`,\n    );\n\n    return (\n        <PaymentGateDiv>\n            <ObservableContentComponent\n                content={paymentStatus\n                    .pipe(\n                        map(({ checkedDate, isPayed }) =>\n                            !isPayed ? (\n                                <>\n                                    <QRCodeLink {...{ link }} />\n                                    Pay {amount / 1000000000} ERG to address{' '}\n                                    <a\n                                        href={link.href}\n                                        target=\"_blank\"\n                                        rel=\"noopener noreferrer\"\n                                    >\n                                        {address}\n                                    </a>\n                                    <br />\n                                    In{' '}\n                                    <Countdown\n                                        date={dueDate}\n                                        overtime={false}\n                                        renderer={({ minutes, seconds }) => (\n                                            <>\n                                                {minutes}:{seconds}\n                                            </>\n                                        )}\n                                    />\n                                    <br />\n                                    until{' '}\n                                    {\n                                        dueDate.toUTCString() /* TODO: @hejny Some smarter component to show date and time - maybe use moment.js */\n                                    }\n                                    <hr />\n                                    <Loader /> Waiting for payment\n                                    <br />\n                                    Last checked at{' '}\n                                    {\n                                        checkedDate.toUTCString() /* TODO: @hejny Some smarter component to show date and time - maybe use moment.js */\n                                    }\n                                </>\n                            ) : (\n                                <>\n                                    Succesfully payed!\n                                    {/* TODO: !!! @hejny Place here a link or redirection */}\n                                </>\n                            ),\n                        ),\n                    )\n                    .pipe(\n                        catchError((error: Error) => of(<>{error.message}</>)),\n                    )}\n            />\n        </PaymentGateDiv>\n    );\n}\n\nconst PaymentGateDiv = styled.div`\n    font-size: 11px;\n    width: 500px;\n`;\n\n/**\n *  TODO: !!! @hejny Deal up in design in superlong addreses like UegztxGAXchyKXtaZYFkGWxDnCpMD329qSNk4YVrc8wrwitM58WVocMT59rPSasNZJwezshytQ74pq9JF8uUGGYHJW64hbooxY54dDCRZnFVqFvXGcj1jUhkXpuYuVaDY1b6LcXq9zRCZCiXZ36Gswg2TqcgZRE1B5ZxUrKSd19XykEfsgx5eWW3k7MDiLxvisPqMxqpZtP8UHvgwucJxZ4Bg86xWC3v4kXVC6o9mkg7z64MqiQy1FrqHvY65mr7UgG1vK8q37mDcgZPkDc7BKmsKSLynXgDNsqT8yirvxmsCU9o5wMsF8BoFPxUnjPGLAp7yBwnqtvXowq3o4pYnc4h93irPEHqbTySBgLSEwFzgRgbVrXtE8FaL1q2LVyg7rbHJHzvjVfJMyQDSGQwecG6iWybNUv9sP7SKanHegS4wn8xKaBGrSmqTNk4aPpRXvGTr6rikYxmTYDmQru6tJSebRUf7mhsbtp3xTngEgFtPVCMQTnuuNtszbtHnMHGxfPntz8gEqfKFjHrM1LSCkWxuiYx92Nj7EHFY5vnM7\n */\n","import styled from 'styled-components';\n\nexport const Button = styled.button`\n    border: solid 1.5px #009edf;\n    background-color: #009edf;\n    color: white;\n    border-radius: 5px;\n    padding: 7px 18px;\n    font-size: 0.9em;\n    margin-top: 5px;\n    margin-bottom: 5px;\n\n    cursor: pointer;\n    display: inline-block;\n    text-decoration: none;\n\n    &:hover {\n        background-color: #8bbfd3;\n    }\n`;\n","import styled from 'styled-components';\n\nexport const ErrorComponent = styled.div`\n    display: block;\n    background-color: #bb2b2b;\n    color: white;\n    padding: 5px;\n\n    margin-top: 5px;\n    margin-bottom: 5px;\n\n    border-radius: 5px;\n`;\n","import React from 'react';\nimport styled from 'styled-components';\n\nexport function Float({ children }: React.PropsWithChildren<{}>) {\n    return (\n        <FloatDiv className={`outer`}>\n            <div className={`inner`}>{children}</div>\n        </FloatDiv>\n    );\n}\n\nconst FloatDiv = styled.div`\n    position: absolute;\n\n    .inner {\n        position: relative;\n    }\n`;\n","import React from 'react';\n\nexport function Nl2br(props: { children: string }) {\n    const lines = props.children.split('\\n');\n    return (\n        <span>\n            {lines.map((line, i) => (\n                <React.Fragment key={i}>\n                    {line}\n                    {i < lines.length - 1 && <br />}\n                </React.Fragment>\n            ))}\n        </span>\n    );\n}\n","import React from 'react';\nimport { Promisable } from 'type-fest';\nimport { Loader } from './Loader';\n\nexport type IFactory<T> = () => T;\n\nexport type IFactorable<T> = T | IFactory<T>;\n\nexport function factor<T>(factorable: IFactorable<T>): T {\n    if (typeof factorable === 'function') {\n        return (factorable as any)();\n    } else {\n        return factorable;\n    }\n}\n\ninterface IAsyncContentComponentProps {\n    /**\n     * Component to be rendered before the content is loaded\n     *\n     * If not set, default loading is used\n     */\n    loading?: JSX.Element;\n\n    /**\n     * The async content to be rendered\n     */\n    content: IFactorable<Promisable<JSX.Element>>;\n}\n\ninterface IAsyncContentComponentState {\n    content: JSX.Element;\n}\n\n/**\n * Utility for mounting RxJS observable content\n *\n * @collboard-modules-sdk\n */\nexport function AsyncContentComponent({\n    loading,\n    content,\n}: IAsyncContentComponentProps) {\n    const [state, setState] = React.useState<IAsyncContentComponentState>({\n        content: loading || <Loader />,\n    });\n\n    React.useEffect(() => {\n        (async () => {\n            setState({ content: await factor(content) });\n        })();\n\n        return () => {\n            /* TODO: @hejny Can here be some reasonable teardown logic? */\n        };\n    }, [content]);\n\n    return state.content;\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport { AsyncContentComponent } from '../components/AsyncContentComponent';\nimport { FILE_PREVIEWERS } from '../config';\n\ninterface ISingleFilePreviewProps {\n    file: File;\n}\n\nexport function SingleFilePreview({ file }: ISingleFilePreviewProps) {\n    return (\n        <SingleFilePreviewDiv>\n            <AsyncContentComponent\n                key={file.name}\n                content={async () => {\n                    for (const filePreviewer of FILE_PREVIEWERS) {\n                        if (filePreviewer.isSupporting(file)) {\n                            return await filePreviewer.render(file);\n                        }\n                    }\n\n                    // Note: This should never happen, because UnknownFilePreview will support everything\n                    return <>No preview available</>;\n                }}\n            />\n        </SingleFilePreviewDiv>\n    );\n}\n\nconst SingleFilePreviewDiv = styled.div`\n    width: 100%;\n    height: 100%;\n`;\n","import styled from 'styled-components';\nimport { SingleFilePreview } from './SingleFilePreview';\n\ninterface IMultipleFilesPreviewProps {\n    files: File[];\n}\n\nexport function MultipleFilesPreview({ files }: IMultipleFilesPreviewProps) {\n    return (\n        <MultipleFilesPreviewDiv filesCount={files.length}>\n            {files.map((file) => (\n                <div key={file.name} className=\"file-mask\">\n                    <div className=\"file-container\">\n                        <SingleFilePreview file={file} />\n                    </div>\n                </div>\n            ))}\n        </MultipleFilesPreviewDiv>\n    );\n}\n\nconst MultipleFilesPreviewDiv = styled.div<{ filesCount: number }>`\n    display: flex;\n    flex-direction: row;\n    align-content: stretch;\n    justify-content: stretch;\n\n    width: 100%;\n    height: 100%;\n\n    .file-mask {\n        /*/\n        outline: 1px dashed red; /**/\n\n        overflow: hidden;\n        width: ${({ filesCount }) => 100 / filesCount}%;\n        height: 100%;\n    }\n\n    .file-container {\n        /*/\n        outline: 1px dashed red; /**/\n\n        align-self: stretch;\n\n        width: 100%;\n        height: 100%;\n    }\n`;\n","import { blake2b256 } from '../hash/blake2b256';\nimport { shortenHexValue } from '../utils/shortenHexValue';\nimport { IOracle } from './_IOracle';\n\nexport class FakeFileOracle implements IOracle {\n    public readonly name = `FILE${\n        this.file.name.toUpperCase() /* TODO: @hejny Normalize to uppercase */\n    }`;\n    public readonly ttl = -1;\n\n    constructor(private readonly file: File) {}\n\n    async getData() {\n        const hash = await blake2b256(this.file);\n\n        return [\n            {\n                title: this.file.name,\n                format: 'Blake2b256 hash',\n                value: hash,\n                getShortenValue(length: number) {\n                    return shortenHexValue(hash, length);\n                },\n            },\n        ];\n    }\n}\n","import { forEver } from 'waitasecond';\nimport { IPaymentStatus } from '../interfaces/IPaymentStatus';\nimport {\n    ergo_script_address,\n    ergo_wallet_address,\n    nanoerg,\n} from '../interfaces/stringTypes';\n//import { isUserAddressValid } from './addressValidator';\n\n// @ts-nocheck\n\ninterface ICreateSigmaStampNFT {\n    documentHashInBase64: string;\n    documentHashInHex: string;\n    userAddress: ergo_wallet_address;\n}\n\nexport async function createSigmaStampNFT({\n    userAddress,\n    documentHashInBase64,\n    documentHashInHex,\n}: ICreateSigmaStampNFT): Promise<{\n    amount: nanoerg;\n    address: ergo_script_address;\n    dueDate: Date;\n    paymentStatus: IPaymentStatus;\n}> {\n    // if (!(await isUserAddressValid(userAddress))) {\n    //     throw new Error(`User address \"${userAddress}\" is not correct.`);\n    // }\n\n    await forEver();\n    return {} as any;\n\n    /*\n    This code is @deprecated or/and uses @deprecated utils\n\n\n    //TODO: @hejny <- @nitram147 validate whether hash already exists in blockchain (same way as in the verification phase)\n    //if hash exists there, show user warning that this file was already stamped via sigmastamp and cannot be done more times\n    //[of couse somebody can stamp this file again on its own, however will we be taking into account only the first occurence of this hash in blockchain - so the guy who stamped it first is the original owner of the file]\n\n    //TODO: use getCurrentBlockchainMinFeeRequired to get current min fee\n    //allow user to set multiples of this value to increase/decrease minting priority\n    //TODO: @hejny <- @nitram147 design custom form in which user will setup:\n    // 1.) user's address\n    // 2.) how fast he want to have his NFT to be minted (in multiples of minimum fee - see comment above)\n    // 3.) user could show hidden advanced setting which will include:\n    //     a.) setup of custom amount of ERG to send together with NFT token (so user will be able to transfer NFT in future ERG amount sent together with NFT will be used to cover transaction fees on ergo network)\n    //         there should be also tooltip (like question mark icon) which will include explanation text (which will explain what this ERG amount mean...)\n    //TODO: @nitram147 -> @hejny <- @nitram147 think about stamping service fee... (whether to make it stable or based on current erg price etc.)\n    const mintingFee = 20000000; /* TODO: @hejny User settable * /\n    const ergsSendTogetherWithNFT = 100000000; /* TODO: @hejny User settable * /\n    const ergsFeeForSigmaStampService = 100000000; /* Our fee * /\n    //TODO: @hejny <- @nitram147 move harcoded values into some config file\n    const sigmaStampProviderAddress =\n        '3Ww7y6vi4NhFZ1ufsEF8vQNyGrvhNmeMmDWP9h3s4qSEFSMoGooV';\n    const assetTypeValue = 'Ad4=';\n    //TODO: @nitram147 - redesign this fee also to use getCurrentBlockchainMinFeeRequired function...\n    const returnTransactionFee = 10000000;\n\n    /**\n     * TODO: !!! @hejny unhardcode address\n     * /\n    // TODO: @hejny <- @nitram147 move it also to some configuration...\n    const sigmaStampAssemblerNodeAddr =\n        '3Ww7y6vi4NhFZ1ufsEF8vQNyGrvhNmeMmDWP9h3s4qSEFSMoGooV';\n    // TODO: @hejny <- @nitram147 same - move the value of \"10\" bellow to the config file\n    const refundHeightThreshold = (await getCurrentBlockchainHeight()) + 10;\n\n    console.log(\n        JSON.stringify({\n            ergsSendTogetherWithNFT,\n            userAddress,\n            ergsFeeForSigmaStampService,\n            sigmaStampProviderAddress,\n            assetTypeValue,\n            documentHashInBase64,\n            returnTransactionFee,\n            sigmaStampAssemblerNodeAddr,\n            refundHeightThreshold,\n        }),\n    );\n\n    const { script } = await createScript({\n        script: '/scripts/sigmastamp-nft.scala',\n\n        // TODO: @hejny Better names for variabiles below (replace everywhere in scala script + here):\n        ergsSendTogetherWithNFT,\n        userAddress,\n        ergsFeeForSigmaStampService,\n        sigmaStampProviderAddress,\n        assetTypeValue,\n        documentHashInBase64,\n        returnTransactionFee,\n        sigmaStampAssemblerNodeAddr,\n        refundHeightThreshold,\n    });\n\n    const { address: compiledSmartContractAddress } = await compileErgoScript({\n        script,\n    });\n\n    const { amount, dueDate, paymentStatus } = await sendFollowRequest({\n        compiledSmartContractAddress,\n        userAddress,\n        sigmaStampProviderAddress,\n        documentHashInHex,\n        ergsSendTogetherWithNFT,\n        ergsFeeForSigmaStampService,\n        mintingFee,\n    });\n\n    return {\n        amount,\n        address: compiledSmartContractAddress,\n        dueDate,\n        paymentStatus,\n    };\n    */\n}\n","import { forImmediate } from 'waitasecond';\n\nexport async function promptAsync(\n    message?: string,\n    _default?: string,\n): Promise<string | null> {\n    await forImmediate();\n    const result = prompt(message, _default);\n\n    return result;\n}\n\n/**\n * TODO: @hejny Nicer user input than prompt\n */\n","import { saveAs } from 'file-saver';\nimport JSZip from 'jszip';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { Vector } from 'xyzt';\nimport { Button } from '../../components/Button';\nimport { ErrorComponent } from '../../components/ErrorComponent';\nimport { Float } from '../../components/Float';\nimport { LogoComponent } from '../../components/LogoComponent';\nimport { Nl2br } from '../../components/Nl2br';\nimport { IPaymentGateProps } from '../../components/PaymentGate';\nimport { PdfPage } from '../../components/PdfPage';\nimport { QRCode } from '../../components/QRCode';\nimport { QRCodeLink } from '../../components/QRCodeLink';\nimport { ORACLES, PAGE_MM_TO_PX_RATIO, PAGE_SIZE } from '../../config';\nimport { MultipleFilesPreview } from '../../filePreview/MultipleFilesPreview';\nimport { blake2b256 } from '../../hash/blake2b256';\nimport { string_base64, string_hex } from '../../interfaces/stringTypes';\nimport { FakeFileOracle } from '../../oracles/FakeFileOracle';\nimport { IOracle, IOracleData } from '../../oracles/_IOracle';\nimport { ROUTES } from '../../routes';\nimport { createSigmaStampNFT } from '../../scripts/createSigmaStampNFT';\nimport { hexToBase64 } from '../../utils/hexToBase64';\nimport { promptAsync } from '../../utils/promptAsync';\n\ninterface IFirstCertificatePdfPageProps {\n    files: File[];\n    setPayment: (v: IPaymentGateProps) => void;\n}\n\nexport function FirstCertificatePdfPage(props: IFirstCertificatePdfPageProps) {\n    const { files, setPayment } = props;\n    const [data, setData] = React.useState<IOracleData[][]>([]);\n    const [errors, setErrors] = React.useState<Error[]>([]);\n\n    React.useEffect(() => {\n        Promise.all(\n            (\n                [\n                    ...files.map((file) => new FakeFileOracle(file)),\n                    ...ORACLES,\n                ] as IOracle[]\n            ).map(async (oracle) => {\n                try {\n                    return {\n                        data: await oracle.getData(/* TODO: @hejny Auto refresh */),\n                        error: null,\n                    };\n                } catch (error) {\n                    if (error instanceof Error) {\n                        return { data: [], error };\n                    } else {\n                        throw error;\n                    }\n                }\n            }),\n        ).then((dataAndErrors) => {\n            // tslint:disable-next-line: no-shadowed-variable\n            setData(dataAndErrors.map(({ data }) => data));\n            setErrors(\n                dataAndErrors\n                    .map(({ error }) => error)\n                    .filter((e) => e !== null) as Error[],\n            );\n        });\n    }, [files]);\n\n    return (\n        <PdfPage\n            renderUi={({ createPdf }) => {\n                return (\n                    <>\n                        {errors.length > 0 && (\n                            <ErrorComponent>\n                                There occured some errors in getting oracle data\n                                You can still download the certificate but some\n                                data from external world may be missing\n                                <br />\n                                See more details on{' '}\n                                <Link to={ROUTES.Oracles}>oracles page</Link>.\n                            </ErrorComponent>\n                        )}\n                        <Button\n                            onClick={async () => {\n                                // TODO: @hejny Download logic into separate util\n                                // TODO: @hejny setPayment should not be in IFirstCertificatePdfPageProps\n\n                                const certificateFile = new File(\n                                    [await createPdf()],\n                                    // TODO: Encorporate filename into certificate filename\n                                    'certificate1.pdf' /* TODO: Maybe add current {lastModified: 1534584790000}*/,\n                                );\n\n                                // TODO: !!! @hejny Add files into certificate\n\n                                //saveAs(certificateFile);\n                                const zip = new JSZip();\n                                for (const file of files) {\n                                    zip.file(file.name, file);\n                                }\n                                zip.file(certificateFile.name, certificateFile);\n\n                                const zipBlob = await zip.generateAsync({\n                                    type: 'blob',\n                                });\n\n                                const zipHash: string_hex = await blake2b256(\n                                    zipBlob,\n                                );\n\n                                const zipHashBase64: string_base64 =\n                                    await hexToBase64(zipHash);\n\n                                saveAs(\n                                    zipBlob,\n                                    // TODO: @hejny Encorporate filename into certificate filename\n                                    `certificate1.${zipHash.substring(\n                                        0,\n                                        5,\n                                    )}.zip`,\n                                );\n\n                                // TODO: @hejny <- @nitram147 replace this with custom form (details mentioned in createSigmaStampNFT.ts)\n                                // TODO: @hejny <- @nitram147 also move proof of today function away, so user will be able to decide whether he want to stamp file or he will make special version of file via proof of today page and then he will stamp this proof of today generated zip file (certificate)\n                                //                            but it should be always opt-in, not opt-out !!!\n                                const userAddress = await promptAsync(\n                                    'Please fill your Ergo address',\n                                    '3Ww7y6vi4NhFZ1ufsEF8vQNyGrvhNmeMmDWP9h3s4qSEFSMoGooV' /* !!! Unhardocde */,\n                                );\n                                if (!userAddress) {\n                                    return;\n                                }\n\n                                //TODO: @hejny <- @nitram147 include also page for \"return\" - this page will be used in case that ergo-assembler failed and users funds got stucked on proxy-smartcontract, see https://sigmausd.io/#/refund <-- we need to implement something like this or the exact \"clone\" of this...\n                                setPayment(\n                                    await createSigmaStampNFT({\n                                        userAddress,\n                                        documentHashInBase64: zipHashBase64,\n                                        documentHashInHex: zipHash,\n                                    }),\n                                );\n                            }}\n                        >\n                            Download 1st certificate\n                        </Button>\n                    </>\n                );\n            }}\n        >\n            <PreviewWithLogo>\n                {/* TODO: @hejny Analyze topleft side of the preview and choose light or dark logo according to it */}\n                <Float>\n                    <LogoComponent isWatermark />\n                </Float>\n                <MultipleFilesPreview {...{ files }} />\n            </PreviewWithLogo>\n            {/* TODO: @hejny Here is weird space between preview and data */}\n            <Data>\n                {data.map((dataGroup, index) => (\n                    <div className=\"data-cell\" key={index}>\n                        {dataGroup.map(\n                            ({\n                                title,\n                                value,\n                                format,\n                                source,\n                                getShortenValue,\n                            }) => (\n                                <div\n                                    className=\"data-cell-group\"\n                                    key={title}\n                                    title={`${title} [${format}]`}\n                                >\n                                    {source ? (\n                                        <QRCodeLink\n                                            link={source}\n                                            margin={0}\n                                            color={{\n                                                dark: '#000000',\n                                                light: '#ffffff00',\n                                            }}\n                                        />\n                                    ) : value.length < 16 ? (\n                                        <></>\n                                    ) : (\n                                        <QRCode\n                                            text={value}\n                                            margin={0}\n                                            color={{\n                                                dark: '#000000',\n                                                light: '#ffffff00',\n                                            }}\n                                        />\n                                    )}\n\n                                    <div className=\"key render-as-text\">\n                                        <Nl2br>{title}</Nl2br>\n                                    </div>\n                                    <div className=\"value render-as-text\">\n                                        {getShortenValue\n                                            ? getShortenValue(16)\n                                            : value}\n                                    </div>\n                                </div>\n                            ),\n                        )}\n                    </div>\n                ))}\n            </Data>\n        </PdfPage>\n    );\n}\n\nconst PreviewWithLogo = styled.div`\n    background-color: #cccccc;\n    height: ${(PAGE_SIZE.y / 2) * PAGE_MM_TO_PX_RATIO}px;\n`;\n\nconst CARD_SIZE = new Vector(PAGE_SIZE.x / 4, 70);\nconst CARD_PADDING = 7;\n\nconst Data = styled.div`\n    /*/\n    border: 3px dotted #906090; /**/\n\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    align-items: stretch;\n    justify-content: flex-start;\n    align-content: stretch;\n\n    .data-cell {\n        /*/\n        outline: 1px dotted red; /**/\n\n        //box-shadow: #5e97ccb7 0px 0px 50px;\n\n        /*/\n        &:nth-child(3n + 0) {\n            background-color: #5e97ccb7;\n        }\n\n        &:nth-child(3n + 1) {\n            background-color: #855eccb7;\n        }\n\n        &:nth-child(3n + 2) {\n            background-color: #5ecc9eb7;\n        }\n        /**/\n\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        justify-content: flex-start;\n\n        width: ${(CARD_SIZE.x - 2 * CARD_PADDING) * PAGE_MM_TO_PX_RATIO}px;\n\n        /*\n        height: ${(CARD_SIZE.y - 2 * CARD_PADDING) * PAGE_MM_TO_PX_RATIO}px;*/\n\n        padding: ${CARD_PADDING * PAGE_MM_TO_PX_RATIO}px;\n\n        .data-cell-group {\n            /*/\n            outline: 1px dotted red; /**/\n        }\n\n        .key,\n        .value {\n            display: block;\n        }\n\n        .key {\n            font-weight: bold;\n            text-decoration: underline;\n            font-size: ${5 * PAGE_MM_TO_PX_RATIO}px;\n            // white-space: nowrap;\n\n            &::after {\n                content: ':';\n            }\n        }\n\n        .value {\n            font-size: ${4 * PAGE_MM_TO_PX_RATIO}px;\n        }\n\n        .qrcode {\n            width: 50px !important;\n            height: 50px !important;\n        }\n    }\n`;\n\n/**\n * TODO: @hejny GET param for passing file\n * TODO: @hejny Integration with Collboard\n */\n","import { string_base64, string_hex } from '../interfaces/stringTypes';\n\nexport function hexToBase64(str: string_hex): string_base64 {\n    return btoa(\n        String.fromCharCode.apply(\n            null,\n            // @ts-ignore:\n            str\n                .replace(/\\r|\\n/g, '')\n                .replace(/([\\da-fA-F]{2}) ?/g, '0x$1 ')\n                .replace(/ +$/, '')\n                .split(' '),\n        ),\n    );\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { IPaymentGateProps, PaymentGate } from '../../components/PaymentGate';\nimport { UploadZone } from '../../components/UploadZone';\nimport { UploadZoneSigmastampContent } from '../../components/UploadZoneSigmastampContent';\nimport { ROUTES } from '../../routes';\nimport { FirstCertificatePdfPage } from './FirstCertificatePdfPage';\n\ninterface IAppState {\n    files: File[];\n}\n\nexport function FirstCertificatePage() {\n    const [state, setState] = React.useState<IAppState>({ files: [] });\n    const [payment, setPayment] = React.useState<null | IPaymentGateProps>(\n        null,\n    );\n\n    if (!payment) {\n        return (\n            <FirstAndSecondCertificatePageDiv>\n                {/*\n                <Button\n                onClick={() => { console.log('test'); createCertificate() }}\n                >\n                Create document\n                </Button>\n                    <h1>Sigmastamp</h1>*/}\n\n                {state.files.length === 0 ? (\n                    <UploadZone\n                        onFiles={async (files) => {\n                            setState({ files });\n                            /*\n                            const file = files[0];\n\n                            const hash = await blake2b256(file);\n\n                            console.log({ files, file, hash });\n\n                            const certificateFile = createCertificate({ certificateFilename: 'certificate.pdf', hash });\n\n                            const zip = new JSZip();\n                            zip.file(file.name, file);\n                            zip.file(certificateFile.name, certificateFile);\n\n                            const zipFile = await zip.generateAsync({ type: 'blob' });\n                            saveAs(zipFile, 'certificate.zip');\n                            */\n                        }}\n                        isClickable\n                    >\n                        <UploadZoneSigmastampContent>\n                            Drop the files you want to timestamp here!\n                        </UploadZoneSigmastampContent>\n                    </UploadZone>\n                ) : (\n                    <FirstCertificatePdfPage\n                        files={state.files}\n                        setPayment={setPayment}\n                    />\n                )}\n\n                <Link to={ROUTES.SecondCertificate}>\n                    Or verify your 1st certificate.\n                </Link>\n            </FirstAndSecondCertificatePageDiv>\n        );\n    } else {\n        return <PaymentGate {...payment} />;\n    }\n}\n\nexport const FirstAndSecondCertificatePageDiv = styled.div`\n    a {\n        color: #555 !important;\n        font-size: 0.7em;\n    }\n`;\n\n/**\n * TODO: @hejny When the user is in the middle of the process, prevent unloading of the page (or the component) by \"unsubmitted form\" feature of the browser\n */\n","import { useEffect, useState } from 'react';\nimport { IWallet } from '../pages/00-App/App';\n\ninterface IAddressesLoader {\n    loaded: boolean;\n    addresses: string[];\n}\n\nconst DEFAULT_ADDRESSES_LOADER_STATE: IAddressesLoader = {\n    loaded: false,\n    addresses: [],\n};\n\ninterface IUserIsOwnerOfAddress {\n    ownerOfStamperAddress: boolean;\n    ownerOfHolderAddress: boolean;\n    availableIntersectingAddresses: string[];\n}\n\nconst DEFAULT_USER_IS_OWNER_OF_ADDRESS_STATE: IUserIsOwnerOfAddress = {\n    ownerOfStamperAddress: false,\n    ownerOfHolderAddress: false,\n    availableIntersectingAddresses: [],\n};\n\nexport function MessageSigner(props: {\n    wallet: IWallet;\n    stamperAddress: string;\n    holderAddress: string;\n}) {\n    const [loadedAddresses, setLoadedAddresses] = useState<IAddressesLoader>(\n        DEFAULT_ADDRESSES_LOADER_STATE,\n    );\n    const [userIsOwner, setUserIsOwner] = useState<IUserIsOwnerOfAddress>(\n        DEFAULT_USER_IS_OWNER_OF_ADDRESS_STATE,\n    );\n\n    useEffect(() => {\n        setLoadedAddresses(DEFAULT_ADDRESSES_LOADER_STATE);\n        if (!ergoConnector || !ergoConnector.nautilus) return;\n        if (!props.wallet.connected) return;\n        ergoConnector.nautilus.getContext().then((ctx) => {\n            ctx.get_used_addresses().then((addresses) => {\n                const intersectingAddresses: string[] = [];\n                if (addresses.indexOf(props.stamperAddress) > -1)\n                    intersectingAddresses.push(props.stamperAddress);\n                if (addresses.indexOf(props.holderAddress) > -1)\n                    intersectingAddresses.push(props.holderAddress);\n                if (\n                    intersectingAddresses.length === 2 &&\n                    intersectingAddresses[0] === intersectingAddresses[1]\n                )\n                    intersectingAddresses.pop();\n                setUserIsOwner({\n                    ownerOfStamperAddress:\n                        addresses.indexOf(props.stamperAddress) > -1,\n                    ownerOfHolderAddress:\n                        addresses.indexOf(props.holderAddress) > -1,\n                    availableIntersectingAddresses: intersectingAddresses,\n                });\n                setLoadedAddresses({ loaded: true, addresses: addresses });\n            });\n        });\n    }, [props.wallet, props.stamperAddress, props.holderAddress]);\n\n    function signButtonClickHandler() {\n        if (!ergoConnector || !ergoConnector.nautilus) return;\n        if (!props.wallet.connected) return;\n\n        //todo refs to element values (selected address and text in textarea)\n        ergoConnector.nautilus.getContext().then((ctx) => {\n            //todo fix address bellow, same for message\n            ctx.sign_data(props.holderAddress, 'message').then((res) => {\n                console.log(res);\n            });\n        });\n    }\n\n    return (\n        <div>\n            {!props.wallet.connected ? (\n                <h3>\n                    Are you the original \"stamper\" or current holder of NFT\n                    token and want to sign a message? Please connect a wallet\n                    first.\n                </h3>\n            ) : !loadedAddresses.loaded ? (\n                <h3>Loading your addresses, wait a bit...</h3>\n            ) : !userIsOwner.ownerOfStamperAddress &&\n              !userIsOwner.ownerOfHolderAddress ? (\n                <h3>\n                    Unfortunately, you are not owner of any of addresses\n                    associated with this NFT\n                </h3>\n            ) : (\n                <div>\n                    <label for=\"address_select\">Select address:</label>\n                    <br />\n                    <select id=\"address_select\">\n                        {userIsOwner.availableIntersectingAddresses.map(\n                            (addr: string) => (\n                                <option value={addr} key={addr}>\n                                    {addr}\n                                </option>\n                            ),\n                        )}\n                    </select>\n                    <br />\n                    <textarea\n                        name=\"message\"\n                        placeholder=\"Fill your message here\"\n                    ></textarea>\n                    <br />\n                    <span style={{ color: 'red' }}>\n                        Message signing is currently still not implemented in\n                        Nautilus Wallet :-(\n                    </span>\n                    <br />\n                    <button onClick={signButtonClickHandler} disabled={true}>\n                        Sign message\n                    </button>\n                </div>\n            )}\n        </div>\n    );\n}\n","import { useState, useEffect } from \"react\";\nimport { Link } from 'react-router-dom';\nimport { getAggregatedDifficultySinceBlock } from \"../scripts/getCurrentBlockchainInfo\";\n\ninterface IFalseProofHardness {\n\tloaded: boolean,\n\taggregatedDifficulty: number\n}\n\nconst DEFAULT_FALSE_PROOF_HARDNESS: IFalseProofHardness = {\n\tloaded: false,\n\taggregatedDifficulty: 0\n}\n\n//todo fixme move me somewhere outside\n// refs https://www.hashrate.no/coins/ERG/benchmarks\n// sources for RTX 4070 Ti: https://www.nicehash.com/blog/post/nvidia-rtx-4070-ti-specs-and-mining-hashrate\n// this seems to be most efficient card in hashrate/W\nconst single_card_consumption_kW: number = 0.13;\nconst single_card_hashrate: number = 134500000; //134.5MH/s\nconst single_card_name: string = \"RTX 4070 Ti\";\nconst electricity_price_usd_per_kWh: number = 0.1;\n\nfunction calculate_kWh_used_to_achieve_target_difficulty(target_diff: number): number {\n\tconst hours_on_single_card = target_diff / (single_card_hashrate * 3600);\n\treturn hours_on_single_card * single_card_consumption_kW;\n}\n\nfunction calculate_electricity_price_for_kwh(kWh: number): number {\n\treturn kWh * electricity_price_usd_per_kWh;\n}\n\nfunction calculate_electricity_price_to_achieve_target_difficulty(target_diff: number): number {\n\treturn calculate_electricity_price_for_kwh(\n\t\tcalculate_kWh_used_to_achieve_target_difficulty(target_diff)\n\t);\n}\n\nfunction get_kWh_in_nice_format(kWh: number): string {\n\tif (kWh <= 1000) return kWh.toFixed(2) + \" kWh\";\n\telse if (kWh <= 1000000) return (kWh / 1000).toFixed(2) + \" MWh\";\n\telse if (kWh <= 1000000000) return (kWh / 1000000).toFixed(2) + \" GWh\";\n\telse return (kWh / 1000000000).toFixed(2) + \" TWh\";\n}\n\nfunction get_usd_in_approximated_magnitude_format(usd: number): string {\n\tif (usd >= 1000000) {\n\t\treturn \"$\" + (usd / 1000000).toFixed(2) + \" million\";\n\t} else if (usd >= 1000) {\n\t\treturn \"$\" + (usd / 1000).toFixed(2) + \" thousand\";\n\t} else {\n\t\treturn \"$\" + usd.toFixed(2);\n\t}\n}\n\nfunction get_usd_in_nice_format(usd: number): string {\n\tlet result: string = \"$\" + usd.toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, \"$&,\");\n\tresult += \" (\";\n\tresult += get_usd_in_approximated_magnitude_format(usd);\n\tresult += \")\";\n\treturn result;\n}\n\nexport function FalseProofsHardnessEstiminator(props: {\n\tstampingBlock: number\n}) {\n\n\tconst [hardness, setHardness] = useState<IFalseProofHardness>(DEFAULT_FALSE_PROOF_HARDNESS);\n\tconst [kWh, setkWh] = useState<number>(0.0);\n\n\tuseEffect(() => {\n\t\tsetHardness(DEFAULT_FALSE_PROOF_HARDNESS);\n\t\tgetAggregatedDifficultySinceBlock(props.stampingBlock).then((res) => {\n\t\t\tsetkWh(calculate_kWh_used_to_achieve_target_difficulty(res));\n\t\t\tsetHardness({ loaded: true, aggregatedDifficulty: res });\n\t\t});\n\t}, [props.stampingBlock]);\n\n\tif (!hardness.loaded) {\n\t\treturn (\n\t\t\t<div>Calculating information about how hard it would be to falsify this stamping proof...</div>\n\t\t);\n\t}\n\n\treturn (\n\t\t<div>To falsify this stamping, it would be required to spend {get_kWh_in_nice_format(kWh)} of electricty, while mining with the most energy efficient cards {single_card_name} for this purpose. This would mean that the falsification cost would be {get_usd_in_nice_format(calculate_electricity_price_for_kwh(kWh))}, assuming the price of {electricity_price_usd_per_kWh} $/kWh. Click <Link to=\"/wiki#calculation-of-falsification-cost\" target=\"_blank\" rel=\"noopener noreferrer\">here</Link> to see how its calculated.</div>\n\t);\n}\n","// import { saveAs } from 'file-saver';\n// import JSZip from 'jszip';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n// import { Button } from '../../components/Button';\nimport { PdfPage } from '../../components/PdfPage';\nimport { UploadZone } from '../../components/UploadZone';\nimport { UploadZoneSigmastampContent } from '../../components/UploadZoneSigmastampContent';\n// import { blake2b256 } from '../../hash/blake2b256';\nimport { ROUTES } from '../../routes';\nimport {\n    getNFTHolderAddress,\n    getTransactionTime,\n    validateFirstCertificate,\n} from '../../scripts/validateFirstCertificate';\nimport { FirstAndSecondCertificatePageDiv } from '../10-FirstCertificate/FirstCertificatePage';\nimport { IWallet } from \"../00-App/App\";\nimport { MessageSigner } from \"../../components/MessageSigner\";\nimport { get_time_with_timezone_from_timestamp, get_local_date_from_timestamp } from \"../../scripts/timeUtils\";\nimport { FalseProofsHardnessEstiminator } from \"../../components/FalseProofsHardnessEstiminator\";\n\n//todo not only current holder but also show minter address!!!\n\nexport function VerificationPage(props: {\n    wallet: IWallet\n}) {\n    // const [files, setFiles] = React.useState<any>([]);\n    const [verification, setVerification] = React.useState<any>(null);\n\n    if (!verification || (typeof verification.verificationFailed !== \"undefined\" )) {\n        return (\n            <div><span>(Everything will be executed <Link to=\"/wiki#everything-is-executed-localy\" target=\"_blank\" rel=\"noopener noreferrer\">localy</Link>, file is not being send anywhere ;-))</span>\n            <br /><br />\n            { (verification !== null && typeof verification.verificationFailed !== \"undefined\") ? <span style={{color: \"red\"}}>Examined file was not validated (stamped) via SigmaStamp.</span>  : <span></span> }\n            <FirstAndSecondCertificatePageDiv>\n                <UploadZone\n                    onFiles={async (droppedFiles) => {\n                        const firstCertificate = droppedFiles[0];\n                        // setFiles([droppedFiles[0]]);\n\n                        const droppedFileVerification =\n                            await validateFirstCertificate(firstCertificate);\n\n                        if (!droppedFileVerification) {\n                            alert(\n                                `Examined file was not validated (stamped) via SigmaStamp.`,\n                            );\n                            // TODO: @hejny <- @nitram147 see comments bellow\n                            //       consider skipping the rest because extraction of transactionId from null in\n                            //       the following statements will result in error\n                            setVerification({verificationFailed: true});\n                            return;\n                        }\n\n                        const { transactionId } = droppedFileVerification;\n                        const { settlementHeight } = droppedFileVerification;\n                        const stamperAddress: string = droppedFileVerification.address;\n\n                        const { timestamp, tokenId } = await getTransactionTime(\n                            transactionId,\n                        );\n                        // TODO: @nitram147 -> @hejny <- @nitram147 handle null in case that there isn't asset holder\n                        // this could happen when somebody burned NFT token\n                        // (we know that the corresponding NFT has already existed based on validateFirstCertificate function)\n                        // (but we don't know whether it still exists...)\n                        const currentHolder = await getNFTHolderAddress(\n                            tokenId,\n                        );\n\n                        setVerification({\n                            ...droppedFileVerification,\n                            timestamp,\n                            tokenId,\n                            stamperAddress,\n                            currentHolder,\n                            settlementHeight\n                        });\n                        console.log(droppedFileVerification);\n                    }}\n                    isClickable\n                >\n                    <UploadZoneSigmastampContent>\n                        Drop your file here to verify it.\n                    </UploadZoneSigmastampContent>\n                </UploadZone>\n                <Link to={ROUTES.Playground}>\n                    Or stamp your file here.\n                </Link>\n            </FirstAndSecondCertificatePageDiv></div>\n        );\n    } else {\n        return (\n            <div>\n                <PdfPage\n                    renderUi={({ createPdf }) => {\n                        return (\n                            /*<Button\n                                onClick={async () => {\n                                    const certificateFile = new File(\n                                        [await createPdf()],\n                                        'certificate2.pdf', // TODO: Maybe add current {lastModified: 1534584790000},\n                                    );\n\n                                    //saveAs(certificateFile);\n\n                                    //TODO: @nitram147 -> @hejny <- @nitram147 design output format of verify PDF\n                                    // also show somehow to user what amount of GPUs will be required to remine the chain to make\n                                    // false proofs - this will be based on the block difficulty since the NFT mining block up to today\n                                    // TODO: @nitram147 - ask on discord whether there's some function on full node to find this difficulty value...\n                                    const zip = new JSZip();\n                                    for (const file of files) {\n                                        zip.file(file.name, file);\n                                    }\n                                    zip.file(certificateFile.name, certificateFile);\n\n                                    const zipBlob = await zip.generateAsync({\n                                        type: 'blob',\n                                    });\n\n                                    const zipHash = await blake2b256(zipBlob);\n                                    saveAs(\n                                        zipBlob,\n                                        `certificate2.${zipHash.substring(\n                                            0,\n                                            5,\n                                        )}.zip`,\n                                    );\n                                }}\n                            >\n                                Download 2nd certificate\n                            </Button>*/\n                            <span></span>//just dummy span\n                        );\n                    }}\n                >\n                    <b>Stamped in transaction with ID:</b> {verification.transactionId}\n                    <br />\n                    <b>Transaction was mined at height:</b> {verification.settlementHeight}\n                    <br />\n                    <b>Mined at UnixTimestamp:</b> {verification.timestamp}\n                    <br />\n                    <b>Mined at date:</b> {get_local_date_from_timestamp(verification.timestamp)}\n                    <br />\n                    <b>Mined at time:</b> {get_time_with_timezone_from_timestamp(verification.timestamp)}\n                    <br />\n                    <b>Stamping tokenId:</b> {verification.tokenId}\n                    <br />\n                    <b>Stamper address:</b> {verification.stamperAddress}\n                    <br />\n                    <b>Current holder of stamping NFT token:</b> {verification.currentHolder}\n                    <br />\n                </PdfPage>\n                <FalseProofsHardnessEstiminator stampingBlock={verification.settlementHeight} />\n                <MessageSigner wallet={props.wallet} stamperAddress={verification.stamperAddress} holderAddress={verification.currentHolder} />\n            </div>\n        );\n    }\n}\n\n/**\n * TODO: @hejny When the user is in the middle of the process, prevent unloading of the page (or the component) by \"unsubmitted form\" feature of the browser\n */\n","import React from 'react';\nimport styled from 'styled-components';\n\nexport function BlockchainsPage() {\n    return (\n        <OraclesDiv>\n            <h1>BlockchainsPage</h1>\n            <p>SigmaStamp is working on theese blockchains:</p>\n\n            <a href=\"https://ergoplatform.org/\">\n                <img\n                    className=\"logo\"\n                    alt=\"SigmaStamp logo\"\n                    src=\"./blockchains/ergo.svg\"\n                />\n            </a>\n        </OraclesDiv>\n    );\n}\n\nconst OraclesDiv = styled.div``;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { AsyncContentComponent } from '../../components/AsyncContentComponent';\nimport { ErrorComponent } from '../../components/ErrorComponent';\nimport { ORACLES } from '../../config';\n\ninterface IOracleResult {\n    loaded: boolean,\n    data: any\n}\n\nconst DEFAULT_ORACLE_RESULT: IOracleResult = {\n    loaded: false, data: \"\"\n}\n\n// TODO: @hejny <--- fix all of this spaghetti code implementation...\n\ninterface IOracleStateMappings{\n    BTC: (IOracleResult | React.Dispatch<React.SetStateAction<IOracleResult>>)[];\n    ETH: (IOracleResult | React.Dispatch<React.SetStateAction<IOracleResult>>)[];\n    LTC: (IOracleResult | React.Dispatch<React.SetStateAction<IOracleResult>>)[];\n    DATE: (IOracleResult | React.Dispatch<React.SetStateAction<IOracleResult>>)[];\n    NYTIMES: (IOracleResult | React.Dispatch<React.SetStateAction<IOracleResult>>)[];\n}\n\nfunction allOraclesDataLoaded(mappings: IOracleStateMappings): boolean{\n    for(const key in mappings){\n        if(!((mappings as any)[key][0].loaded)) return false;\n    }\n    return true;\n}\n\nexport function OraclesPage() {\n\n    const [resultBitcoinOracle, setResultBitcoinOracle] = useState<IOracleResult>(DEFAULT_ORACLE_RESULT);\n    const [resultEthereumOracle, setResultEthereumOracle] = useState<IOracleResult>(DEFAULT_ORACLE_RESULT);\n    const [resultLitecoinOracle, setResultLitecoinOracle] = useState<IOracleResult>(DEFAULT_ORACLE_RESULT);\n    const [resultDateOracle, setResultDateOracle] = useState<IOracleResult>(DEFAULT_ORACLE_RESULT);\n    const [resultRssFeedOracle, setResultRssFeedOracle] = useState<IOracleResult>(DEFAULT_ORACLE_RESULT);\n\n    const mappings: IOracleStateMappings = {\n        \"BTC\" : [resultBitcoinOracle, setResultBitcoinOracle],\n        \"ETH\" : [resultEthereumOracle, setResultEthereumOracle],\n        \"LTC\" : [resultLitecoinOracle, setResultLitecoinOracle],\n        \"DATE\" : [resultDateOracle, setResultDateOracle],\n        \"NYTIMES\" : [resultRssFeedOracle, setResultRssFeedOracle],\n    };\n\n    return (\n        <OraclesDiv>\n            <h1>Oracles</h1>\n            <p>\n                Here are information from external world which can be used in some of the SigmaStamp use-cases. Look <Link to=\"/wiki#present-time-proof\"  target=\"_blank\" rel=\"noopener noreferrer\">here</Link> to find more information.\n            </p>\n            {ORACLES.map((oracle) => (\n                <div key={oracle.name}>\n                    <AsyncContentComponent\n                        content={async () => {\n                            try {\n                                const data =\n                                    await oracle.getData(/* TODO: @hejny Auto refresh */);\n                                // (mappings as any)[oracle.name][1]({loaded: true, data: data});\n\n                                return (\n                                    <>\n                                        {data.map(\n                                            ({\n                                                title,\n                                                value,\n                                                format,\n                                                source,\n                                            }) => (\n                                                <div\n                                                    key={title}\n                                                    title={`${title} [${format}]`}\n                                                >\n                                                    <b>{`${title}: `}</b>\n\n                                                    <a href={source?.href}>\n                                                        {value}\n                                                    </a>\n                                                </div>\n                                            ),\n                                        )}\n                                    </>\n                                );\n                            } catch (error) {\n                                if (error instanceof Error) {\n                                    return (\n                                        <ErrorComponent>\n                                            Error occured when getting data from{' '}\n                                            {oracle.constructor.name}:<br />\n                                            {error.message}\n                                            {/* TODO: @hejny Link to GitHub */}\n                                        </ErrorComponent>\n                                    );\n                                } else {\n                                    throw error;\n                                }\n                            }\n                        }}\n                    />\n                </div>\n            ))}\n            {/* !allOraclesDataLoaded(mappings) ? <p>Loading data from oracles....</p> : <p>Loaded</p> */}\n        </OraclesDiv>\n    );\n}\n\nconst OraclesDiv = styled.div``;\n\n/**\n * TODO: @hejny Information how to add oracles (link to github)\n */\n","import { lookup } from 'mime-types';\nimport { string_url } from '../interfaces/stringTypes';\n\nexport async function fetchAsFile(url: string_url): Promise<File> {\n    const response = await fetch(url);\n    const blob = await response.blob();\n    let type = lookup(url);\n\n    if (type === false) {\n        type = 'application/octet-stream';\n    }\n    return new File([blob], basename(url), { type });\n}\n\nfunction basename(path: string_url): string {\n    return path.split('/').reverse()[0];\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport { AsyncContentComponent } from '../../components/AsyncContentComponent';\nimport { fetchAsFile } from '../../utils/fetchAsFile';\nimport { FirstCertificatePdfPage } from '../10-FirstCertificate/FirstCertificatePdfPage';\n\nexport function SampleCertificatesPage() {\n    return (\n        <SampleCertificatesDiv>\n            <h1>Sample certificates</h1>\n            <p>Here are samples how will your certificates look like:</p>\n\n            <div className=\"samples\">\n                <div className=\"sample\">\n                    <h2>Multiple files</h2>\n                    <AsyncContentComponent\n                        content={async () => (\n                            <FirstCertificatePdfPage\n                                files={[\n                                    await fetchAsFile(\n                                        process.env.PUBLIC_URL +\n                                            '/samples-to-sign/sample1.jpg',\n                                    ),\n                                    await fetchAsFile(\n                                        process.env.PUBLIC_URL +\n                                            '/samples-to-sign/sample1.mp3',\n                                    ),\n                                    await fetchAsFile(\n                                        process.env.PUBLIC_URL +\n                                            '/samples-to-sign/sample1.c',\n                                    ),\n                                ]}\n                                setPayment={() => {}}\n                            />\n                        )}\n                    />\n                </div>\n\n                <div className=\"sample\">\n                    <h2>First certificate with image</h2>\n                    <AsyncContentComponent\n                        content={async () => (\n                            <FirstCertificatePdfPage\n                                files={[\n                                    await fetchAsFile(\n                                        process.env.PUBLIC_URL +\n                                            '/samples-to-sign/sample1.jpg',\n                                    ),\n                                ]}\n                                setPayment={() => {}}\n                            />\n                        )}\n                    />\n                </div>\n\n                <div className=\"sample\">\n                    <h2>First certificate with code</h2>\n                    <AsyncContentComponent\n                        content={async () => (\n                            <FirstCertificatePdfPage\n                                files={[\n                                    await fetchAsFile(\n                                        process.env.PUBLIC_URL +\n                                            '/samples-to-sign/sample1.c',\n                                    ),\n                                ]}\n                                setPayment={() => {}}\n                            />\n                        )}\n                    />\n                </div>\n\n                <div className=\"sample\">\n                    <h2>First certificate with sound in mp3</h2>\n                    <AsyncContentComponent\n                        content={async () => (\n                            <FirstCertificatePdfPage\n                                files={[\n                                    await fetchAsFile(\n                                        process.env.PUBLIC_URL +\n                                            '/samples-to-sign/sample1.mp3',\n                                    ),\n                                ]}\n                                setPayment={() => {}}\n                            />\n                        )}\n                    />\n                </div>\n            </div>\n            {/* TODO: @hejny <h2>Second certificate</h2> */}\n\n        </SampleCertificatesDiv>\n    );\n}\n\nconst SampleCertificatesDiv = styled.div`\n    .samples {\n        display: flex;\n        flex-wrap: wrap;\n        align-content: flex-start;\n        justify-content: center;\n    }\n\n    .sample {\n        margin: 10px;\n    }\n`;\n","import React from 'react';\n\nexport function TechnicalStatusPageBadges() {\n    return (\n        <p>\n            <a\n                href=\"https://raw.githubusercontent.com/sigmastamp/sigmastamp-frontend/master/LICENSE\"\n                rel=\"nofollow\"\n            >\n                <img\n                    src=\"https://camo.githubusercontent.com/09c911a390e8b97ab6b67abca28fa25089552380b7bd3266805698dd4f68664c/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f7369676d617374616d702f7369676d617374616d702d66726f6e74656e642e7376673f7374796c653d666c6174\"\n                    alt=\"License\"\n                    data-canonical-src=\"https://img.shields.io/github/license/sigmastamp/sigmastamp-frontend.svg?style=flat\"\n                />\n            </a>\n            <a href=\"https://github.com/sigmastamp/sigmastamp-frontend/actions/workflows/test.yml\">\n                <img\n                    src=\"https://github.com/sigmastamp/sigmastamp-frontend/actions/workflows/test.yml/badge.svg\"\n                    alt=\"Test\"\n                />\n            </a>\n            <a href=\"https://github.com/sigmastamp/sigmastamp-frontend/actions/workflows/lint.yml\">\n                <img\n                    src=\"https://github.com/sigmastamp/sigmastamp-frontend/actions/workflows/lint.yml/badge.svg\"\n                    alt=\"Lint\"\n                />\n            </a>\n            <a\n                href=\"https://snyk.io/test/github/sigmastamp/sigmastamp-frontend\"\n                rel=\"nofollow\"\n            >\n                <img\n                    src=\"https://camo.githubusercontent.com/2df9dc47f5366c33c81e3381b1679660e543aac075fddd7f309a0834a2293767/68747470733a2f2f736e796b2e696f2f746573742f6769746875622f7369676d617374616d702f7369676d617374616d702d66726f6e74656e642f62616467652e737667\"\n                    alt=\"Known Vulnerabilities\"\n                    data-canonical-src=\"https://snyk.io/test/github/sigmastamp/sigmastamp-frontend/badge.svg\"\n                />\n            </a>\n            <a href=\"https://github.com/sigmastamp/sigmastamp-frontend/issues\">\n                <img\n                    src=\"https://camo.githubusercontent.com/0474e5b937ce5602e0fabe656fd946f62fd8201d7de737048c7a12b8c17a18b8/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732f7369676d617374616d702f7369676d617374616d702d66726f6e74656e642e7376673f7374796c653d666c6174\"\n                    alt=\"Issues\"\n                    data-canonical-src=\"https://img.shields.io/github/issues/sigmastamp/sigmastamp-frontend.svg?style=flat\"\n                />\n            </a>\n        </p>\n    );\n}\n","import React from 'react';\nimport { BUILD_DATE, BUILD_DETAILS_URL, VERSION } from '../../config';\nimport { TechnicalStatusPageBadges } from './TechnicalStatusPageBadges';\n\nexport function TechnicalStatusPage() {\n    return (\n        <>\n            <h1>Technical status</h1>\n\n            <TechnicalStatusPageBadges />\n\n            <b>\n                {' '}\n                <a\n                    href={`https://github.com/sigmastamp/sigmastamp-frontend/`}\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                >\n                    GitHub repository\n                </a>\n            </b>\n            <div>\n                <b>Version: </b>\n                <a\n                    href={`https://github.com/sigmastamp/sigmastamp-frontend/tree/v${VERSION}`}\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                >\n                    {VERSION}\n                </a>\n            </div>\n            {BUILD_DETAILS_URL && BUILD_DATE && (\n                <div>\n                    <b> Build date: </b>\n                    <a\n                        href={BUILD_DETAILS_URL?.href}\n                        target=\"_blank\"\n                        rel=\"noreferrer\"\n                    >\n                        {BUILD_DATE.toUTCString()}\n                    </a>\n                </div>\n            )}\n        </>\n    );\n}\n\n/**\n *\n * TODO: !!! @nitram147 <- @hejny There should be some way how to determine if the server is working propperly\n * TODO: @hejny do not allow to send payment if the server is not synced\n */\n","import { IWallet } from '../00-App/App';\n\n//todo same check for mainnet/testnet as in babelergs\n//todo same modal as in babelergs\n\nexport function checkIfNautilusAvailable() {\n    return (typeof ergoConnector !== \"undefined\");\n}\n\nexport const NAUTILUS_WALLET_INSTALL_URL: string = \"https://chrome.google.com/webstore/detail/nautilus-wallet/gjlmehlldlphhljhpnlddaodbjjcchai/related\";\n\nexport function ErgoConnectorButton(props: {\n    wallet: IWallet;\n    setWallet: React.Dispatch<React.SetStateAction<IWallet>>;\n}) {\n    async function handleClick() {\n\n        if (!props.wallet.connected) {\n\n            if (!checkIfNautilusAvailable()) {\n                // TODO: @hejny !!!! - this should work\n                // TODO: Link to better more explainable page\n                alert(\n                    `You need to install Nautilus Wallet first\\n ` + NAUTILUS_WALLET_INSTALL_URL,\n                );\n                return;\n            }\n\n            if (!ergoConnector || !ergoConnector.nautilus) return; // just to supress typescript error\n\n            const isConnected = await ergoConnector.nautilus.connect({\n                createErgoObject: false,\n            });\n\n            if (isConnected) {\n                const ctx = await ergoConnector.nautilus.getContext();\n                const address = await ctx.get_change_address();\n                const balance = Number(await ctx.get_balance());\n                props.setWallet((prev: IWallet) => ({\n                    ...prev,\n                    connected: true,\n                    address,\n                    balance,\n                }));\n            }\n\n        } else {\n            if (!ergoConnector || !ergoConnector.nautilus) return;\n            await ergoConnector.nautilus.disconnect();\n            props.setWallet((prev: IWallet) => ({ ...prev, connected: false }));\n        }\n    }\n\n    return (\n        <button onClick={handleClick}>\n            {props.wallet.connected ? 'Disconnect wallet' : 'Connect wallet'}\n        </button>\n    );\n}\n","import { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { UploadZone } from '../../components/UploadZone';\nimport { UploadZoneSigmastampContent } from '../../components/UploadZoneSigmastampContent';\nimport { blake2b256 } from '../../hash/blake2b256';\nimport {\n    create_transaction,\n    get_minimum_required_balance,\n    get_minimum_required_balance_ergs,\n    sign_tx,\n    submit_tx,\n} from '../../scripts/transactionBuilder';\n// import { ErgoConnectorButton } from './ErgoConnectorButton';\nimport { IWallet } from '../00-App/App';\nimport { checkIfNautilusAvailable } from \"../../components/ErgoConnectorButton\";\n\nfunction check_whether_there_is_enough_balance(balance: number): boolean {\n    return balance > get_minimum_required_balance();\n}\n\nexport function PlaygroundPage(props: { wallet: IWallet }) {\n    const [file, setFile] = useState<any>(null);\n    const [sentTXHash, setSentTXHash] = useState<string>('');\n\n    function stampItButtonHandler() {\n        if (file === null) return;\n        create_transaction(props.wallet.address, file.hash).then((tx: any) => {\n            sign_tx(tx).then((stx) => {\n                if (stx === null) {\n                    alert('Problem during transaction signing, try again!');\n                    return;\n                }\n                submit_tx(stx).then((txId) => {\n                    if (txId === null) {\n                        alert(\n                            'Submission of transaction into blockchain network failed, try again!',\n                        );\n                        return;\n                    }\n                    setSentTXHash(txId);\n                });\n            });\n        });\n    }\n\n    return (\n        <PlaygroundPageDiv>\n            <h2>Stamp your document</h2>\n            {!props.wallet.connected ? (\n                checkIfNautilusAvailable() ?\n                    <p>Please connect the wallet first</p>\n                    : <p>Please install Nautilus wallet which is required for this section to work</p>\n            ) : !check_whether_there_is_enough_balance(props.wallet.balance) ? (\n                <p>\n                    There is not enough balance for stamping process in your\n                    wallet. Required amount is at least{' '}\n                    {get_minimum_required_balance_ergs()} ERGs.\n                </p>\n            ) : file === null ? (\n                <div><span>(Everything will be executed <Link to=\"/wiki#everything-is-executed-localy\" target=\"_blank\" rel=\"noopener noreferrer\">localy</Link>, file is not being send anywhere ;-))</span>\n                    <br /><br />\n                    <UploadZone\n                        onFiles={async (files) => {\n                            const firstFile = files[0];\n                            const hash = await blake2b256(firstFile);\n                            setFile({ file: firstFile, hash });\n                        }}\n                        isClickable\n                    >\n                        <UploadZoneSigmastampContent>\n                            Drop the files you want to timestamp here!\n                        </UploadZoneSigmastampContent>\n                    </UploadZone></div>\n            ) : sentTXHash === '' ? (\n                <div>\n                    <p>{file.file.name}</p>\n                    <p>{file.hash}</p>\n                    Stamp your file and receive SigmaStampNFT to your address:{' '}\n                    {props.wallet.address} by pressing following button:\n                    <br />\n                    <button onClick={stampItButtonHandler}>Stamp it!</button>\n                </div>\n            ) : (\n                <p>Stamping TX with id {sentTXHash} was successfuly sent! Please wait until it will be mined, only then it can be verified by the SigmaStamp.</p>\n            )}\n        </PlaygroundPageDiv>\n    );\n}\n\nconst PlaygroundPageDiv = styled.div``;\n\n/**\n * TODO: @hejny !!!! Here should be some observing of the transaction status ?nothing/unknown -> unconfirmed -> confirmed\n *       [🍚] @see https://explorer.ergoplatform.com/en/transactions/d06fb7239d92f575f83a7f9ea51e5c055acefd848cec2b41f7b11591030af2b6\n */\n","import styled from 'styled-components';\n\nexport function AboutPage() {\n    return (\n        <AboutPageDiv>\n            <h1>About sigmastamp</h1>\n            <p>Verify the time origin of your documents</p>\n\n            <h2>How it started?</h2>\n\n            <h2>People behing SigmaStamp?</h2>\n\n            <div className=\"authors\">\n                <div className=\"author\">\n                    {/* TODO: !!! @nitram147 <- @hejny Please write basic information about yourself */}\n                    <a href=\"https://www.pavolhejny.com/\">\n                        <img alt=\"Pavol Hejný\" src=\"./team/pavol-hejny.png\" />\n                    </a>\n                    <div className=\"name\">Nitram Martin</div>\n                    <div className=\"role\">Blockchain</div>\n                </div>\n\n                <div className=\"author\">\n                    <a href=\"https://www.pavolhejny.com/\">\n                        <img alt=\"Pavol Hejný\" src=\"./team/pavol-hejny.png\" />\n                    </a>\n                    <div className=\"name\">Pavol Hejný</div>\n                    <div className=\"role\"> Frontend</div>\n                </div>\n            </div>\n\n            <h2>Logo</h2>\n            <img\n                className=\"logo\"\n                alt=\"SigmaStamp logo\"\n                src=\"./sigmastamp-logo.white.svg\"\n            />\n            <img\n                className=\"logo\"\n                alt=\"SigmaStamp logo\"\n                src=\"./sigmastamp-logo.black.svg\"\n            />\n        </AboutPageDiv>\n    );\n}\n\nconst AboutPageDiv = styled.div`\n    /*/\n    outline: 1px dashed red; /**/\n\n    .authors {\n        display: flex;\n    }\n\n    .author {\n        text-align: center;\n    }\n\n    .author img {\n        width: 300px;\n    }\n\n    .author .name {\n        font-size: 1.5em;\n    }\n\n    .author .role {\n        font-size: 1.1em;\n    }\n\n    img.logo {\n        width: 200px;\n    }\n`;\n\n/**\n * TODO: !!! @nitram147 <- @hejny Please write basic information about the sigmastamp\n * TODO: This info should be also part of repository readme\n */\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { ROUTES } from '../../routes';\n\nexport function MenuItemsComponent() {\n    return (\n        <MenuElement>\n            <ul>\n                {/*<li>\n                    <NavLink to={ROUTES.FirstCertificate}>\n                        First certificate\n                    </NavLink>\n                </li>*/}\n                <li>\n                    <NavLink to={\"/\"}>\n                        Home\n                    </NavLink>\n                </li>\n                {/*<li>\n                    <NavLink to={ROUTES.HowItWorks}>How it works?</NavLink>\n                </li>*/}\n                <li>\n                    <NavLink to={ROUTES.Faq}>FAQ</NavLink>\n                </li>\n                <li>\n                    <NavLink to={ROUTES.VerificationPage}>\n                        Verify document\n                    </NavLink>\n                </li>\n                {/*<li>\n                    <NavLink to={ROUTES.Blockchains}>Blockchains</NavLink>\n                </li>*/}\n                <li>\n                    <NavLink to={ROUTES.Oracles}>Present time proof</NavLink>\n                </li>\n                {/*<li>\n                    <NavLink to={ROUTES.SampleCertificates}>\n                        Sample certificates\n                    </NavLink>\n                </li>*/}\n                {/*<li>\n                    <NavLink to={ROUTES.TechnicalStatus}>\n                        Technical status\n                    </NavLink>\n                </li>*/}\n                <li>\n                    <NavLink to={ROUTES.Playground}>Stamp document</NavLink>\n                </li>\n                <li>\n                    <NavLink to={ROUTES.Wiki}>Wiki</NavLink>\n                </li>                \n                {/*<li>\n                    <NavLink to={ROUTES.About}>About</NavLink>\n                </li>*/}\n            </ul>\n        </MenuElement>\n    );\n}\nconst MenuElement = styled.menu`\n    /*/\n    outline: 1px dashed red; /**/\n\n    padding-left: 0px;\n    padding-left: 10px;\n\n    ul {\n        list-style: none;\n        padding: 0;\n    }\n\n    li {\n        margin: 0;\n        font-size: 1.5em;\n    }\n\n    a {\n        color: #aaaaaa !important;\n        font-size: 0.7em;\n        text-decoration: none;\n\n        transition: color 0.2s ease-in-out;\n    }\n\n    a.active,\n    a:hover {\n        color: #eeeded !important;\n    }\n\n    @media (max-width: 850px) {\n    }\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { ErgoConnectorButton } from '../../components/ErgoConnectorButton';\nimport { MenuItemsComponent } from './MenuItemsComponent';\n\nimport { IWallet } from './App';\n\nexport function MenuComponent(props: {\n    wallet: IWallet;\n    setWallet: React.Dispatch<React.SetStateAction<IWallet>>;\n}) {\n    return (\n        <MenuElement>\n            <MenuItemsComponent />\n            <ErgoConnectorButton\n                wallet={props.wallet}\n                setWallet={props.setWallet}\n            />\n        </MenuElement>\n    );\n}\nconst MenuElement = styled.div`\n    /*/\n    outline: 1px dashed red; /**/\n\n    @media (max-width: 850px) {\n        display: flex;\n        align-items: flex-start;\n        align-content: flex-start;\n\n        & > * {\n            outline: 1px dashed transparent;\n        }\n\n        ul {\n            margin: 0;\n            display: flex;\n        }\n\n        ul li {\n            border-right: 1px solid #ccc;\n            padding: 10px;\n        }\n    }\n`;\n\n/**\n * TODO: @hejny <HeaderComponent is stupid name - name it as MenuComponent and MenuComponent rename to MenuItemsComponent\n */\n","import { useState } from 'react';\nimport { BrowserRouter, Link, Route, Routes } from 'react-router-dom';\nimport styled from 'styled-components';\nimport articleHowItWorks from '../../articles/how-it-works.md';\nimport articleMobileDevice from '../../articles/mobile-device.md';\nimport articleFAQ from \"../../articles/FAQ.md\";\nimport articleWiki from \"../../articles/wiki.md\";\nimport { Article } from '../../components/Article';\nimport { Center } from '../../components/Center';\nimport { LogoComponent } from '../../components/LogoComponent';\nimport { Notifications } from '../../components/Notifications';\nimport { VERSION } from '../../config';\nimport { ROUTES } from '../../routes';\nimport { addTooltipToLinks } from '../../utils/addTooltipToLinks';\nimport { NotFoundPage } from '../00-NotFound/NotFound';\n// import { FirstCertificatePage } from '../10-FirstCertificate/FirstCertificatePage';\nimport { HomePage } from \"../15-Home/HomePage\";\nimport { VerificationPage } from '../20-VerificationPage/VerificationPage';\nimport { BlockchainsPage } from '../50-Blockchains/BlockchainsPage';\nimport { OraclesPage } from '../53-Oracles/OraclesPage';\nimport { SampleCertificatesPage } from '../55-SampleCertificates/SampleCertificatesPage';\nimport { TechnicalStatusPage } from '../80-TechnicalStatus/TechnicalStatusPage';\nimport { PlaygroundPage } from '../85-Playground/Playground';\nimport { AboutPage } from '../90-About/AboutPage';\nimport { MenuComponent } from './MenuComponent';\n\nexport interface IWallet {\n    connected: boolean;\n    address: string;\n    balance: number;\n}\n\nconst DEFAULT_WALLET_STATE: IWallet = {\n    connected: false,\n    address: '',\n    balance: 0,\n};\n\nexport function App() {\n    const [wallet, setWallet] = useState<IWallet>(DEFAULT_WALLET_STATE);\n\n    return (\n        <AppDiv>\n            <BrowserRouter>\n                <header className=\"darkmode-ignore\">\n                    <LogoComponent />\n                </header>\n\n                <nav className=\"darkmode-ignore\">\n                    <MenuComponent wallet={wallet} setWallet={setWallet} />\n                </nav>\n\n                <main\n                    ref={(element) => {\n                        if (!element) {\n                            return;\n                        }\n\n                        addTooltipToLinks(element);\n                    }}\n                >\n                    <Routes>\n                        {/* Note: Some of the pages are not shown in the menu BUT ALL should be listed here */}\n                        {/*<Route\n                            path={ROUTES.FirstCertificate}\n                            element={<FirstCertificatePage />}\n                        />*/}\n                        <Route\n                            path={ROUTES.Root}\n                            element={\n                                <Center>\n                                    <HomePage />\n                                </Center>\n                            }\n                        />\n                        <Route\n                            path={ROUTES.VerificationPage}\n                            element={\n                                <Center>\n                                    <VerificationPage wallet={wallet} />\n                                </Center>\n                            }\n                        />\n\n                        <Route\n                            path={ROUTES.Blockchains}\n                            element={<BlockchainsPage />}\n                        />\n                        <Route\n                            path={ROUTES.Oracles}\n                            element={<OraclesPage />}\n                        />\n                        <Route\n                            path={ROUTES.SampleCertificates}\n                            element={<SampleCertificatesPage />}\n                        />\n                        <Route\n                            path={ROUTES.HowItWorks}\n                            element={<Article src={articleHowItWorks} />}\n                        />\n\n                        <Route\n                            path={ROUTES.Mobile}\n                            element={<Article src={articleMobileDevice} />}\n                        />\n                        <Route\n                            path={ROUTES.Wiki}\n                            element={<Article src={articleWiki} />}\n                        />                        \n                        <Route path={ROUTES.Faq} element={<Article src={articleFAQ} />} />\n                        <Route\n                            path={ROUTES.TechnicalStatus}\n                            element={<TechnicalStatusPage />}\n                        />\n\n                        <Route path={ROUTES.About} element={<AboutPage />} />\n\n                        <Route\n                            path={ROUTES.Playground}\n                            element={\n                                <Center>\n                                    <PlaygroundPage wallet={wallet} />\n                                </Center>\n                            }\n                        />\n\n                        <Route\n                            path={ROUTES.Routes}\n                            element={\n                                <ul>\n                                    {Object.entries(ROUTES).map(\n                                        ([name, path]) => (\n                                            <li key={path as string}>\n                                                <Link to={path as string}>\n                                                    <b>{name}</b> {path}\n                                                </Link>\n                                            </li>\n                                        ),\n                                    )}\n                                </ul>\n                            }\n                        />\n\n                        <Route path=\"*\" element={<NotFoundPage />} />\n                    </Routes>\n                </main>\n\n                <footer className=\"darkmode-ignore\">\n                    <a href=\"https://github.com/hejny/rapid-prototyping-wizard/\">\n                        {VERSION}\n                    </a>\n                </footer>\n\n                <Notifications />\n            </BrowserRouter>\n        </AppDiv>\n    );\n}\n\nconst AppDiv = styled.div`\n    /*/\n    outline: 1px dashed green; /**/\n\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto',\n        'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans',\n        'Helvetica Neue', sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n\n    display: grid;\n\n    grid-template-columns: 250px 1fr;\n    grid-template-rows: 100px 1fr 50px;\n    grid-template-areas:\n        '🟥 ⬜'\n        '🟦 ⬜'\n        '⬛ ⬜';\n\n    align-items: stretch;\n    justify-content: stretch;\n\n    @media (max-width: 850px) {\n        grid-template-columns: min-content 1fr;\n        grid-template-rows: min-content 1fr 50px;\n        grid-template-areas:\n            '🟥 🟦'\n            '⬜ ⬜'\n            '⬛ ⬛';\n    }\n\n    @media (max-width: 350px) and (max-width: 300px) {\n        grid-template-columns: auto;\n        grid-template-rows: auto;\n        grid-template-areas: '⬜';\n\n        header,\n        nav,\n        footer {\n            display: none !important;\n        }\n\n        main {\n            padding: 5px !important;\n            scroll-behavior: auto !important;\n        }\n\n        main h1 {\n            margin-top: 0 !important;\n        }\n    }\n\n    header,\n    nav,\n    footer {\n        background-color: hsl(224, 15%, 15%);\n        padding: 10px;\n        z-index: 20;\n    }\n\n    header {\n        grid-area: 🟥;\n\n        display: flex;\n        align-items: center;\n        justify-content: flex-start;\n    }\n\n    nav {\n        /*/\n        outline: 1px dashed red; /**/\n\n        grid-area: 🟦;\n        /* TODO: !!! box-shadow: #00000047 0px 0px 10px;*/\n        /* TODO: !!!  overflow: hidden; */\n    }\n\n    main {\n        /*/\n        outline: 1px dashed red; /**/\n\n        z-index: 5;\n\n        grid-area: ⬜;\n\n        overflow-x: clip;\n        overflow-y: scroll;\n        scroll-behavior: smooth;\n\n        padding: 20px;\n        padding-left: 50px;\n    }\n\n    main h1,\n    main h2,\n    main h3,\n    main h4,\n    main h5,\n    main h6 {\n        margin-top: 40px;\n        border-bottom: 1px solid #444;\n    }\n\n    footer {\n        grid-area: ⬛;\n\n        display: flex;\n        align-items: end;\n        justify-content: end;\n    }\n`;\n\n/**\n * TODO: @hejny Document title should be set according to current page\n */\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BUILD_DATE, BUILD_DETAILS_URL, VERSION } from './config';\nimport { GlobalStyle } from './globalStyle';\nimport { App } from './pages/00-App/App';\n\nconsole.info(\n    `%c📜 Sigmastamp version ${VERSION}` +\n        (!BUILD_DATE ? `` : `\\nBuild at ${BUILD_DATE.toLocaleString()}`) +\n        (!BUILD_DETAILS_URL\n            ? ``\n            : `\\nView build details ${BUILD_DETAILS_URL.href}`),\n    `background: #009EDD; color: white; font-size: 1.1em; font-weight: bold; padding: 5px; border-radius: 3px;`,\n);\n\nReactDOM.render(\n    <React.StrictMode>\n        <GlobalStyle />\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}